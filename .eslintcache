[{"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\index.tsx":"1","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts":"2","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\App.tsx":"3","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx":"4","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx":"5","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\UserPage.tsx":"6","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx":"7","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\hook.ts":"8","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx":"9","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\EditorPage.tsx":"10","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Logout.tsx":"11","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Login.tsx":"12","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\Spinner.tsx":"13","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\WebTopBlock.tsx":"14"},{"size":500,"mtime":1609832668110,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609832668110,"results":"17","hashOfConfig":"16"},{"size":1828,"mtime":1616320092308,"results":"18","hashOfConfig":"16"},{"size":3456,"mtime":1616471466153,"results":"19","hashOfConfig":"16"},{"size":5149,"mtime":1616471297248,"results":"20","hashOfConfig":"16"},{"size":6736,"mtime":1616471433499,"results":"21","hashOfConfig":"16"},{"size":2804,"mtime":1616471192134,"results":"22","hashOfConfig":"16"},{"size":9068,"mtime":1616321150517,"results":"23","hashOfConfig":"16"},{"size":1767,"mtime":1616471413372,"results":"24","hashOfConfig":"16"},{"size":5211,"mtime":1616471215746,"results":"25","hashOfConfig":"16"},{"size":1393,"mtime":1616470333342,"results":"26","hashOfConfig":"16"},{"size":823,"mtime":1616470315342,"results":"27","hashOfConfig":"16"},{"size":2805,"mtime":1616522879390,"results":"28","hashOfConfig":"16"},{"size":323,"mtime":1616323769642,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ip3q26",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\index.tsx",[],["60","61"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\App.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx",["62","63"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx",["64","65","66","67","68"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\UserPage.tsx",["69","70","71","72","73"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx",["74"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\hook.ts",["75"],"import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\ninterface LoginUserProps {\r\n    account: string,\r\n    password: string,\r\n}\r\n\r\ninterface CreateUserProps {\r\n    email: string,\r\n    username: string,\r\n    password: string\r\n}\r\ninterface LocationStateData {\r\n    memberId: string,\r\n    username: string,\r\n    jwtString?: string,\r\n    editMode?: boolean,\r\n\r\n}\r\n\r\ninterface UpdateUserProps {\r\n    //什麼狀態　做什麼事\r\n    // 資料流　狀態流\r\n    fileData: File | undefined,\r\n    description: string | undefined | null,\r\n    username: string | undefined,\r\n    location: LocationStateData,\r\n    userId: string\r\n}\r\n\r\ninterface UserData {\r\n    description: null | string,\r\n    id: string,\r\n    picture_url: string\r\n    username: string\r\n}\r\n\r\nexport const useUser = () => {\r\n    //下次不要這樣包...\r\n    //下次errorCode 可以考慮用 Return 的方式取得 不然render 太多次了\r\n    const [axiosStatus, setAxiosStatus] = useState(\"idle\")\r\n    const [axiosUserData, setAxiosUserData] = useState<LocationStateData>()\r\n    const [errorCode, setErrorCode] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [userData, setUserData] = useState<UserData>()\r\n    const [axiosUserListData, setAxiosUserListData] = useState<UserData[]>()\r\n\r\n\r\n    return {\r\n        axiosUserListData,\r\n        axiosStatus,\r\n        axiosUserData,\r\n        errorCode,\r\n        message,\r\n        userData,\r\n        axiosLoginAccount: ({ account, password }: LoginUserProps) => {\r\n            const axiosLogin = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = axios.post(\"https://api.weblab.tw/v1/auth/general-login\", {\r\n                    appId: \"weblab\",\r\n                    account: account,\r\n                    password: password\r\n                })\r\n                return res\r\n            }\r\n            axiosLogin()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const jwtString = res.data.result.authToken\r\n                    const decoded: LocationStateData = jwtDecode(res.data.result.authToken)\r\n                    console.log(\"decoded\", decoded)\r\n                    const locationState = {\r\n                        memberId: decoded?.memberId,\r\n                        jwtString: jwtString,\r\n                        username: decoded?.username\r\n                    }\r\n                    return locationState\r\n                })\r\n                .then((res) => {\r\n                    setAxiosUserData({ ...res })\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n\r\n        },\r\n        axiosCreateAccount: ({ email, username, password }: CreateUserProps) => {\r\n            const axiosCreate = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = axios.post(\"https://api.weblab.tw/v1/auth/register\", {\r\n                    appId: \"weblab\",\r\n                    email: email,\r\n                    username: username,\r\n                    password: password\r\n                })\r\n                return res\r\n            }\r\n            axiosCreate()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const jwtString = res.data.result.authToken\r\n                    const decoded: LocationStateData = jwtDecode(res.data.result.authToken)\r\n                    console.log(\"decoded\", decoded)\r\n                    const locationState = {\r\n                        memberId: decoded?.memberId,\r\n                        jwtString: jwtString,\r\n                        username: decoded?.username\r\n                    }\r\n                    return locationState\r\n                })\r\n                .then((res) => {\r\n                    setAxiosUserData(res)\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosUpdateAccount: async ({ fileData, description, username, location, userId }: UpdateUserProps) => {\r\n\r\n            const getReadAsDataURL = (file: any) => {\r\n                return new Promise((resolve, reject) => {\r\n                    const reader = new FileReader();\r\n                    reader.addEventListener('load', () => {\r\n                        resolve(reader.result);\r\n                    });\r\n                    reader.readAsDataURL(file);\r\n                })\r\n            }\r\n            const dataUrl: any = fileData === undefined ? null : await getReadAsDataURL(fileData)\r\n\r\n\r\n            const axiosUpdate = async (arrayBuffer: any) => {\r\n\r\n                const res = axios.post(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`, {\r\n                    username: username,\r\n                    description: description,\r\n                    pictureUrl: arrayBuffer\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${location.jwtString} `\r\n                    },\r\n                })\r\n                return res\r\n            }\r\n            axiosUpdate(dataUrl)\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const memberId = res.data.result.id\r\n                    const username = res.data.result.username\r\n                    setAxiosUserData({ ...axiosUserData, memberId: memberId, username: username })\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"hooks\", err)\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosGetSingleUserData: (userId: string) => {\r\n            const axiosGetSignUser = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = await axios.get(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`)\r\n                return res\r\n            }\r\n            axiosGetSignUser()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    return res\r\n                })\r\n                .then((res) => {\r\n                    setUserData(res.data.result)\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosDeleteUserData: ({ userId, jwtString }: { userId: string, jwtString: string | undefined }) => {\r\n            const axiosDeleteUser = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = await axios.delete(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${jwtString} `\r\n                    }\r\n                })\r\n                return res\r\n            }\r\n            axiosDeleteUser()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n\r\n        },\r\n        axiosGetAllUserData: () => {\r\n            setAxiosStatus(\"loading\")\r\n            const axiosGetAllUser = async () => {\r\n                const res = axios.get(\"https://weblab-react-special-midtern.herokuapp.com/v1/users/\")\r\n                return res\r\n            }\r\n            axiosGetAllUser()\r\n                .then((res: any) => {\r\n                    setMessage(res.data.message)\r\n                    setAxiosUserListData(res.data.result)\r\n                }).then(() => {\r\n                    setAxiosStatus(\"success\")\r\n\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\EditorPage.tsx",["76"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Logout.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Login.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\Spinner.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\WebTopBlock.tsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":15},{"ruleId":"85","severity":1,"message":"86","line":36,"column":8,"nodeType":"87","endLine":36,"endColumn":19,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"89","line":12,"column":10,"nodeType":"83","messageId":"84","endLine":12,"endColumn":19},{"ruleId":"81","severity":1,"message":"90","line":12,"column":21,"nodeType":"83","messageId":"84","endLine":12,"endColumn":24},{"ruleId":"85","severity":1,"message":"91","line":40,"column":8,"nodeType":"87","endLine":40,"endColumn":10,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"93","line":61,"column":8,"nodeType":"87","endLine":61,"endColumn":20,"suggestions":"94"},{"ruleId":"81","severity":1,"message":"95","line":80,"column":11,"nodeType":"83","messageId":"84","endLine":80,"endColumn":21},{"ruleId":"81","severity":1,"message":"96","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":19},{"ruleId":"81","severity":1,"message":"89","line":4,"column":21,"nodeType":"83","messageId":"84","endLine":4,"endColumn":30},{"ruleId":"81","severity":1,"message":"90","line":4,"column":32,"nodeType":"83","messageId":"84","endLine":4,"endColumn":35},{"ruleId":"85","severity":1,"message":"97","line":41,"column":8,"nodeType":"87","endLine":41,"endColumn":28,"suggestions":"98"},{"ruleId":"85","severity":1,"message":"99","line":56,"column":8,"nodeType":"87","endLine":56,"endColumn":21,"suggestions":"100"},{"ruleId":"85","severity":1,"message":"86","line":26,"column":8,"nodeType":"87","endLine":26,"endColumn":19,"suggestions":"101"},{"ruleId":"81","severity":1,"message":"102","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"103","line":58,"column":8,"nodeType":"87","endLine":58,"endColumn":19,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosStatus', 'axiosUserData', 'history', and 'message'. Either include them or remove the dependency array.","ArrayExpression",["107"],"'Container' is defined but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'axiosGetAllUserData'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has missing dependencies: 'axiosUserListData' and 'userList'. Either include them or remove the dependency array.",["109"],"'Pagination' is assigned a value but never used.","'Jumbotron' is defined but never used.","React Hook useEffect has a missing dependency: 'axiosGetSingleUserData'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has missing dependencies: 'axiosUserData', 'errorCode', 'history', and 'message'. Either include them or remove the dependency array.",["111"],["112"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'axiosStatus', 'message', and 'setEditDom'. Either include them or remove the dependency array. If 'setEditDom' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"114","fix":"122"},{"desc":"114","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [axiosStatus, axiosUserData, errorCode, history, message]",{"range":"126","text":"127"},"Update the dependencies array to be: [axiosGetAllUserData]",{"range":"128","text":"129"},"Update the dependencies array to be: [axiosUserListData, seachValue, userList]",{"range":"130","text":"131"},"Update the dependencies array to be: [userId, editStatus, axiosGetSingleUserData]",{"range":"132","text":"133"},{"range":"134","text":"127"},{"range":"135","text":"127"},"Update the dependencies array to be: [axiosStatus, errorCode, message, setEditDom]",{"range":"136","text":"137"},[1299,1310],"[axiosStatus, axiosUserData, errorCode, history, message]",[1337,1339],"[axiosGetAllUserData]",[2024,2036],"[axiosUserListData, seachValue, userList]",[1449,1469],"[userId, editStatus, axiosGetSingleUserData]",[1986,1999],[979,990],[1513,1524],"[axiosStatus, errorCode, message, setEditDom]"]