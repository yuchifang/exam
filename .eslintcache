[{"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\index.tsx":"1","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts":"2","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\App.tsx":"3","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\components\\FirstTopBlock.tsx":"4","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\HomePage.tsx":"5","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx":"6","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx":"7","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx":"8","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx":"9","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\UserPage.tsx":"10","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\EditorPage.tsx":"11","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\hook.ts":"12","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\LogOut.tsx":"13","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Logout.tsx":"14","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Login.tsx":"15"},{"size":500,"mtime":1609832668110,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1609832668110,"results":"18","hashOfConfig":"17"},{"size":1766,"mtime":1611920143565,"results":"19","hashOfConfig":"17"},{"size":394,"mtime":1611296257283,"results":"20","hashOfConfig":"17"},{"size":1767,"mtime":1611308602126,"results":"21","hashOfConfig":"17"},{"size":2958,"mtime":1611920049587,"results":"22","hashOfConfig":"17"},{"size":3540,"mtime":1611916795033,"results":"23","hashOfConfig":"17"},{"size":5332,"mtime":1611932815085,"results":"24","hashOfConfig":"17"},{"size":1555,"mtime":1611343023906,"results":"25","hashOfConfig":"17"},{"size":7062,"mtime":1611926107786,"results":"26","hashOfConfig":"17"},{"size":5512,"mtime":1611923271091,"results":"27","hashOfConfig":"17"},{"size":9070,"mtime":1611926972069,"results":"28","hashOfConfig":"17"},{"size":1681,"mtime":1611926125828,"results":"29","hashOfConfig":"17"},{"size":1681,"mtime":1611926125828,"results":"30","hashOfConfig":"17"},{"size":1110,"mtime":1611926157689,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1u1604l",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\index.tsx",[],["69","70"],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts",[],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\App.tsx",[],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\components\\FirstTopBlock.tsx",[],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\HomePage.tsx",["71"],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx",["72"],"import React, { useRef, useEffect } from 'react'\r\nimport { WInput, WSubmitButtom, WTag } from \"../../styles/General\"\r\n\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { FirstTopBlock } from \"../../components/FirstTopBlock\"\r\nimport { RouteComponentProps, Link } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { useUser } from \"../../hook\"\r\n\r\nconst WLoginSection = styled.section`\r\n    padding-top:200px;\r\n    padding-bottom:200px;\r\n`\r\nconst WLoginContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    width:200px;\r\n    flex-direction: column;\r\n    margin:auto;\r\n`\r\nconst WTagBlock = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`\r\ninterface LoginAccountProps extends RouteComponentProps {\r\n\r\n}\r\n\r\nexport const LoginAccount: React.FC<LoginAccountProps> = ({ history, match, location }) => {\r\n\r\n    const passwordRef = useRef<HTMLInputElement>(null)\r\n    const nameRef = useRef<HTMLInputElement>(null)\r\n    const { axiosStatus, axiosUserData, errorCode, message, axiosLoginAccount } = useUser()\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            const location = {\r\n                pathname: \"/UserListPage/users\",\r\n                state: axiosUserData\r\n            }\r\n            history.push(location)\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n\r\n    }, [errorCode])\r\n\r\n    const handleSubmit = () => {\r\n        let account: string\r\n        let password: string\r\n        if (nameRef.current?.value !== undefined && passwordRef.current?.value !== undefined) {\r\n            account = nameRef.current?.value\r\n            password = passwordRef.current?.value\r\n            axiosLoginAccount({ password, account })\r\n        } else {\r\n            alert(\"使用者名稱　密碼　不能為空白\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FirstTopBlock />\r\n            <WLoginSection>\r\n                <WLoginContainer>\r\n                    <WTagBlock>\r\n                        <WTag>\r\n                            <Link to=\"/LoginPage/login\">會員登入</Link>\r\n                        </WTag>\r\n                        <WTag>\r\n                            <Link to=\"/SignupPage/signup\">加入會員</Link>\r\n                        </WTag>\r\n                    </WTagBlock>\r\n                    <WInput placeholder=\"使用者名稱\" type=\"text\" ref={nameRef} />\r\n                    <WInput placeholder=\"密碼\" type=\"password\" ref={passwordRef} />\r\n                    <WSubmitButtom onClick={() => handleSubmit()}>\r\n                        {axiosStatus !== \"loading\" && \"登入\"}\r\n                        {axiosStatus === \"loading\" && <Spinner size=\"sm\" animation=\"border\" />}\r\n                    </WSubmitButtom>\r\n                </WLoginContainer>\r\n            </WLoginSection>\r\n        </>\r\n    );\r\n}","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx",["73"],"import React, { useRef, useEffect } from 'react'\r\nimport { WInput, WSubmitButtom, WTag } from \"../../styles/General\"\r\nimport { RouteComponentProps, Link } from 'react-router-dom'\r\nimport styled from \"styled-components\"\r\nimport { FirstTopBlock } from \"../../components/FirstTopBlock\"\r\nimport { useUser } from \"../../hook\"\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst WLoginSection = styled.section`\r\n    padding-top:200px;\r\n    padding-bottom:200px;\r\n`\r\nconst WLoginContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    width:200px;\r\n    flex-direction: column;\r\n    margin:auto;\r\n`\r\nconst WTagBlock = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`\r\ninterface CreateAccountProps extends RouteComponentProps {\r\n\r\n}\r\n\r\nexport const CreateAccount: React.FC<CreateAccountProps> = ({ history }) => {\r\n\r\n    const emailRef = useRef<HTMLInputElement>(null)\r\n    const passwordRef = useRef<HTMLInputElement>(null)\r\n    const nameRef = useRef<HTMLInputElement>(null)\r\n    const { axiosStatus, axiosUserData, errorCode, message, axiosCreateAccount } = useUser()\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            if (axiosUserData) {\r\n                axiosUserData.editMode = true\r\n                const locationUseList = {\r\n                    pathname: `/UserPage/users/${axiosUserData?.memberId}`,\r\n                    state: axiosUserData,\r\n                }\r\n                history.push(locationUseList)\r\n            }\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n\r\n\r\n    }, [errorCode])\r\n\r\n    const handleSubmit = () => {//創一個帳號 render 5次???\r\n        let email: string\r\n        let username: string\r\n        let password: string\r\n\r\n        if (emailRef.current?.value !== undefined && passwordRef.current?.value !== undefined && nameRef.current?.value !== undefined) {\r\n            email = emailRef.current?.value\r\n            password = passwordRef.current?.value\r\n            username = nameRef.current?.value\r\n            axiosCreateAccount({ email, password, username })\r\n        } else {\r\n            alert(\"信箱 使用者名稱　密碼　不能為空白\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FirstTopBlock />\r\n            <WLoginSection>\r\n                <WLoginContainer>\r\n                    <WTagBlock>\r\n                        <WTag>\r\n                            <Link to=\"/LoginPage/login\">會員登入</Link>\r\n                        </WTag>\r\n                        <WTag>\r\n                            <Link to=\"/SignupPage/signup\">加入會員</Link>\r\n                        </WTag>\r\n                    </WTagBlock>\r\n                    <WInput placeholder=\"電子信箱\" type=\"email\" ref={emailRef} />\r\n                    <WInput placeholder=\"使用者名稱\" type=\"text\" ref={nameRef} />\r\n                    <WInput placeholder=\"密碼\" type=\"password\" ref={passwordRef} />\r\n                    <WSubmitButtom onClick={() => handleSubmit()}>\r\n                        {axiosStatus !== \"loading\" && \"加入\"}\r\n                        {axiosStatus === \"loading\" && <Spinner size=\"sm\" animation=\"border\" />}\r\n                    </WSubmitButtom>\r\n                </WLoginContainer>\r\n            </WLoginSection>\r\n        </>\r\n    );\r\n}\r\n// 　沒有選擇圖片　情況\r\n// 　加上必填提醒　\r\n//　沒有更新des　情況\r\n// 更新完回到　尚未編輯頁　","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx",["74","75","76"],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx",[],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\UserPage.tsx",["77","78","79","80"],"import React, { useEffect, useState } from 'react'\r\nimport styled from \"styled-components\"\r\nimport { RouteComponentProps, Route } from \"react-router-dom\"\r\nimport { Spinner, Jumbotron, Container, Row } from \"react-bootstrap\"\r\nimport { WUserText, WUserImg, WSubmitButtom, outLineBlue } from \"../../styles/General\"\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Logout } from \"../Header/Logout\"\r\nimport { FirstTopBlock } from \"../../components/FirstTopBlock\"\r\nimport { EditorPage } from \"./EditorPage\"\r\nimport { useUser } from \"../../hook\"\r\n\r\nconst WUserPageSection = styled.section`\r\n    padding-top:100px;\r\n    padding-bottom:100px;\r\n`\r\n\r\nconst WUserPageContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    max-width:1000px;\r\n    margin:auto;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0 150px;\r\n`\r\n\r\nconst WUserImgList = styled(WUserImg)`\r\n    margin: 0 auto 20px auto;\r\n    \r\n`\r\n\r\nconst WUserBlock = styled.figure`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst WUserDescription = styled.article`\r\n    font-size:16px;\r\n`\r\n\r\nconst WButtonBlock = styled.div`\r\n\r\n`\r\n\r\nconst WEditButton = styled(WSubmitButtom)`\r\n    background-color:white;\r\n    color: ${outLineBlue};\r\n    border:solid 1px  ${outLineBlue};\r\n    &:hover{\r\n        background-color:${outLineBlue};\r\n        color:white;\r\n    }\r\n`\r\n\r\nconst WDeleteUser = styled.a`\r\n    color:red;\r\n    &:hover {\r\n        color:red;\r\n        cursor:pointer;\r\n    }\r\n`\r\n\r\n\r\ninterface TLocation {\r\n\r\n    jwtString?: string,\r\n    username: string,\r\n    memberId: string,\r\n    editMode?: boolean,\r\n\r\n}\r\ninterface UserPageProps extends RouteComponentProps<{ userId: string }, {}, TLocation> {\r\n\r\n}\r\n\r\ninterface UserData {\r\n    description: null | string,\r\n    id: string,\r\n    picture_url: string\r\n    username: string\r\n}\r\n\r\n\r\nexport const UserPage: React.FC<UserPageProps> = ({ history, location, match }) => {\r\n    const [lightBoxStatus, setLightBoxStatus] = useState(false);\r\n    const [editStatus, setEditStatus] = useState(location?.state?.editMode);\r\n    const [lightBoxButtonText, setLightBoxButtonText] = useState(\"\")\r\n\r\n    const { axiosStatus, axiosUserData, errorCode, message, userData, axiosGetSigleUserData, axiosDeleteUserData } = useUser()\r\n\r\n    const { userId } = match.params\r\n\r\n\r\n    const editAuthority = userId === location.state.memberId\r\n    const { state } = location\r\n\r\n    useEffect(() => {\r\n        axiosGetSigleUserData(userId)\r\n\r\n    }, [userId, editStatus])\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            if (message === \"delete the member successfully\") {\r\n                alert(\"刪除成功\")\r\n                const locationState = {\r\n                    pathname: \"/UserListPage/users\",\r\n                    state: axiosUserData\r\n                }\r\n                history.push(locationState)\r\n            }\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n    }, [axiosStatus])\r\n\r\n    const closeLightBox = () => setLightBoxStatus(false);\r\n\r\n    const openLightBox = (text: string) => {\r\n        if (editAuthority && text === \"編輯\") {\r\n            setEditStatus(true)\r\n        } else {\r\n            setLightBoxStatus(true)\r\n            setLightBoxButtonText(text)\r\n        }\r\n\r\n    }\r\n\r\n    const lightBoxCancelConfirm = () => {\r\n        setLightBoxStatus(false)\r\n        axiosDeleteUserData({ userId, jwtString: state.jwtString })\r\n    }\r\n\r\n    const lightBoxEditConfirm = () => {\r\n        setLightBoxStatus(false)\r\n        setEditStatus(true)\r\n    }\r\n\r\n    const cancelEditPage = () => {\r\n        setEditStatus(false)\r\n    }\r\n\r\n    const UserPage = () => <>\r\n        <WUserPageSection>\r\n            <WUserPageContainer>\r\n                <WUserBlock>\r\n                    <WUserImgList src={userData?.picture_url} alt=\"userImg\" />\r\n                    <WUserText>username__{userData?.username}</WUserText>\r\n                </WUserBlock>\r\n                <WUserDescription>description__\r\n                    {!!userData?.description === false && \"no description here\"}\r\n                    {!!userData?.description === true && userData?.description}\r\n                </WUserDescription>\r\n                <WButtonBlock>\r\n                    {/* 下次遇到可以考慮用disable 來控制 */}\r\n                    <WEditButton onClick={() => openLightBox(\"編輯\")}>編輯</WEditButton>\r\n                    <WDeleteUser onClick={() => openLightBox(\"刪除\")}>刪除此使用者</WDeleteUser>\r\n                </WButtonBlock>\r\n            </WUserPageContainer>\r\n        </WUserPageSection>\r\n    </>\r\n\r\n\r\n    return (\r\n        <>\r\n            <FirstTopBlock />\r\n            <Route component={Logout} />\r\n            {axiosStatus === \"success\" && !editStatus && <UserPage />}\r\n\r\n            {axiosStatus === \"success\" && !!editStatus &&\r\n                <EditorPage\r\n                    userId={userId}\r\n                    userData={userData}\r\n                    cancelEditPage={cancelEditPage}\r\n                    editDom={editStatus}\r\n                    setEditDom={setEditStatus}\r\n                    editorLocation={state}\r\n\r\n\r\n                />}\r\n            {axiosStatus === \"loading\" &&\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Spinner size=\"sm\" animation=\"border\" />\r\n                    </Row>\r\n                </Container>\r\n            }\r\n            <LightBox //render props?\r\n                lightBoxText={lightBoxButtonText}\r\n                show={lightBoxStatus}\r\n                closeLightBox={closeLightBox}\r\n                editAuthority={editAuthority}\r\n                lightBoxDeleteConfirm={lightBoxCancelConfirm}\r\n                lightBoxEditConfirm={lightBoxEditConfirm} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst LightBox = ({ lightBoxText, show, editAuthority, closeLightBox: closeDeleteLightBox, lightBoxDeleteConfirm, lightBoxEditConfirm }:\r\n    {\r\n        lightBoxText: string,\r\n        show: boolean,\r\n        editAuthority: boolean,\r\n        closeLightBox: () => void,\r\n        lightBoxDeleteConfirm: () => void,\r\n        lightBoxEditConfirm: () => void,\r\n    }) => (\r\n    <Modal show={show} onHide={closeDeleteLightBox}>\r\n        <Modal.Header closeButton>\r\n            {editAuthority && <Modal.Title>{lightBoxText}此使用者</Modal.Title>}\r\n            {!editAuthority && <Modal.Title>你非此使用者　無法{lightBoxText}</Modal.Title>}\r\n        </Modal.Header>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={closeDeleteLightBox}>取消</Button>\r\n            {\r\n                editAuthority && lightBoxText === \"刪除\" &&\r\n                < Button variant=\"danger\" onClick={lightBoxDeleteConfirm}>確認</Button>\r\n            }\r\n            {\r\n                editAuthority && lightBoxText === \"編輯\" &&\r\n                < Button variant=\"danger\" onClick={lightBoxEditConfirm}>確認</Button>\r\n            }\r\n        </Modal.Footer>\r\n    </Modal >\r\n)","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\EditorPage.tsx",["81","82"],"\r\nimport React, { useRef, useState, useEffect } from 'react'\r\nimport styled from \"styled-components\"\r\nimport { WUserImg, WSubmitButtom, outLineBlue } from \"../../styles/General\"\r\nimport { useUser } from \"../../hook\"\r\n\r\nconst WUserPageSection = styled.section`\r\n    padding-top:100px;\r\n    padding-bottom:100px;\r\n`\r\n\r\nconst WUserPageContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    max-width:1000px;\r\n    margin:auto;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0 150px;\r\n`\r\n\r\nconst WUserImgList = styled(WUserImg)`\r\n    margin: 0 auto 20px auto;\r\n    \r\n`\r\n\r\nconst WUserBlock = styled.figure`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\n\r\n\r\nconst WButtonBlock = styled.div`\r\n\r\n`\r\n\r\nconst WEditButton = styled(WSubmitButtom)`\r\n    background-color:white;\r\n    color: ${outLineBlue};\r\n    border:solid 1px  ${outLineBlue};\r\n    &:hover{\r\n        background-color:${outLineBlue};\r\n        color:white;\r\n    }\r\n`\r\n\r\n\r\nconst WFileBlock = styled.div`\r\n    display:flex;\r\n    align-items: baseline;    \r\n`\r\n\r\nconst WWarningSpan = styled.span`\r\n    margin-left:10px;\r\n`\r\n\r\nconst WInputFile = styled.input`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    opacity: 0;\r\n`\r\n\r\nconst WLabelFile = styled.label`\r\n    border: solid #222 1px;\r\n    padding:5px 8px;\r\n    border-radius: 5px; \r\n    cursor:pointer;\r\n`\r\n\r\nconst WUserTextInput = styled.input`\r\n\r\n`\r\nconst WUserDescriptionTextArea = styled.textarea`\r\n\r\n`\r\n\r\ninterface TLocation {\r\n\r\n    jwtString?: string,\r\n    username: string,\r\n    memberId: string,\r\n    editMode?: boolean,\r\n\r\n}\r\ninterface EditorPageProps {\r\n    userData?: {\r\n        description: null | string,\r\n        id: string,\r\n        picture_url: string\r\n        username: string\r\n    }\r\n    cancelEditPage: () => void,\r\n    editDom: boolean | undefined,\r\n    setEditDom: React.Dispatch<React.SetStateAction<boolean | undefined>>,\r\n    userId: string,\r\n    editorLocation: TLocation\r\n}\r\n\r\nexport const EditorPage: React.FC<EditorPageProps> = ({\r\n    userData,\r\n    cancelEditPage,\r\n    setEditDom,\r\n    editDom,\r\n    userId,\r\n    editorLocation\r\n}) => {\r\n    const fileRef = useRef<HTMLInputElement>(null)\r\n    const usernameRef = useRef<HTMLInputElement>(null)\r\n    const textAreaRef = useRef<HTMLTextAreaElement>(null)\r\n    const [imgUrl, setImgUrl] = useState<string>(\"\")\r\n\r\n    const { axiosStatus, axiosUserData, errorCode, message, axiosUpdateAccount } = useUser()\r\n\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            alert(\"更新成功\")\r\n            // if (axiosUserData) {\r\n            // axiosUserData.editMode = false\r\n            // const locationUseList = {\r\n            //     pathname: `/UserPage/users/${axiosUserData?.memberId}`,\r\n            //     state: axiosUserData,\r\n            // }\r\n            setEditDom(false)\r\n            // }\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n\r\n    }, [errorCode])\r\n\r\n    const EditPageSave = () => {\r\n\r\n        let descripotion: string | null | undefined = !!textAreaRef?.current?.value ? textAreaRef?.current?.value : null\r\n        let username: string | undefined = !!usernameRef?.current?.value ? usernameRef?.current?.value : editorLocation.username\r\n        let fileData: File | undefined\r\n        if (fileRef.current?.files !== null) {\r\n            fileData = fileRef.current?.files[0]\r\n            axiosUpdateAccount({ fileData, username, descripotion, userId, location: editorLocation })\r\n        } else {\r\n            alert(\"使用者名稱 為必填\")\r\n        }\r\n\r\n    }\r\n\r\n    const handleImgChange = () => {\r\n        let fileData: File | undefined\r\n        if (fileRef.current?.files !== null) {\r\n            if (fileRef.current?.files[0]?.name !== \"\") {\r\n\r\n                fileData = fileRef.current?.files[0]\r\n                if (fileData?.size !== undefined && fileData?.size < 300000) {\r\n                    setImgUrl(URL.createObjectURL(fileData))\r\n                } else {\r\n                    alert(\"上傳失敗　圖片請勿超過３００ＫＢ\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let userImgUrl = imgUrl ? imgUrl : userData?.picture_url\r\n\r\n    return (\r\n        <WUserPageSection>\r\n            <WUserPageContainer>\r\n                <WUserBlock>\r\n                    <WUserImgList src={userImgUrl} alt=\"userImg\" />\r\n                    <WFileBlock>\r\n                        <WInputFile\r\n                            onChange={() => handleImgChange()}\r\n                            accept=\"image/*\"\r\n                            ref={fileRef}\r\n                            type=\"file\"\r\n                            id=\"file\" />\r\n                        <WLabelFile htmlFor=\"file\" >選擇檔案</WLabelFile>\r\n                        <WWarningSpan>上限300KB</WWarningSpan>\r\n                    </WFileBlock>\r\n                    <WUserTextInput required ref={usernameRef} placeholder={userData?.username} />\r\n                </WUserBlock>\r\n                <WUserDescriptionTextArea ref={textAreaRef} rows={4} cols={50} placeholder={!!userData?.description ? userData?.description : \"type something\"} />\r\n                <WButtonBlock>\r\n                    <WEditButton onClick={() => cancelEditPage()}>取消</WEditButton>\r\n                    <WEditButton onClick={() => EditPageSave()}>儲存</WEditButton>\r\n                </WButtonBlock>\r\n            </WUserPageContainer>\r\n        </WUserPageSection>\r\n    );\r\n}","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\hook.ts",["83"],"import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\ninterface LoginUserProps {\r\n    account: string,\r\n    password: string,\r\n}\r\n\r\ninterface CreateUserProps {\r\n    email: string,\r\n    username: string,\r\n    password: string\r\n}\r\ninterface LocationStateData {\r\n    memberId: string,\r\n    username: string,\r\n    jwtString?: string,\r\n    editMode?: boolean,\r\n\r\n}\r\n\r\ninterface UpdateUserProps {\r\n    //什麼狀態　做什麼事\r\n    // 資料流　狀態流\r\n    fileData: File | undefined,\r\n    descripotion: string | undefined | null,\r\n    username: string | undefined,\r\n    location: LocationStateData,\r\n    userId: string\r\n}\r\n\r\ninterface UserData {\r\n    description: null | string,\r\n    id: string,\r\n    picture_url: string\r\n    username: string\r\n}\r\n\r\nexport const useUser = () => {\r\n    //下次不要這樣包...\r\n    //下次errorCode 可以考慮用 Return 的方式取得 不然render 太多次了\r\n    const [axiosStatus, setAxiosStatus] = useState(\"idle\")\r\n    const [axiosUserData, setAxiosUserData] = useState<LocationStateData>()\r\n    const [errorCode, setErrorCode] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [userData, setUserData] = useState<UserData>()\r\n    const [axiosUserListData, setAxiosUserListData] = useState<UserData[]>()\r\n\r\n\r\n    return {\r\n        axiosUserListData,\r\n        axiosStatus,\r\n        axiosUserData,\r\n        errorCode,\r\n        message,\r\n        userData,\r\n        axiosLoginAccount: ({ account, password }: LoginUserProps) => {\r\n            const axiosLogin = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = axios.post(\"https://api.weblab.tw/v1/auth/general-login\", {\r\n                    appId: \"weblab\",\r\n                    account: account,\r\n                    password: password\r\n                })\r\n                return res\r\n            }\r\n            axiosLogin()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const jwtString = res.data.result.authToken\r\n                    const decoded: LocationStateData = jwtDecode(res.data.result.authToken)\r\n                    console.log(\"decoded\", decoded)\r\n                    const locationState = {\r\n                        memberId: decoded?.memberId,\r\n                        jwtString: jwtString,\r\n                        username: decoded?.username\r\n                    }\r\n                    return locationState\r\n                })\r\n                .then((res) => {\r\n                    setAxiosUserData({ ...res })\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n\r\n        },\r\n        axiosCreateAccount: ({ email, username, password }: CreateUserProps) => {\r\n            const axiosCreate = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = axios.post(\"https://api.weblab.tw/v1/auth/register\", {\r\n                    appId: \"weblab\",\r\n                    email: email,\r\n                    username: username,\r\n                    password: password\r\n                })\r\n                return res\r\n            }\r\n            axiosCreate()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const jwtString = res.data.result.authToken\r\n                    const decoded: LocationStateData = jwtDecode(res.data.result.authToken)\r\n                    console.log(\"decoded\", decoded)\r\n                    const locationState = {\r\n                        memberId: decoded?.memberId,\r\n                        jwtString: jwtString,\r\n                        username: decoded?.username\r\n                    }\r\n                    return locationState\r\n                })\r\n                .then((res) => {\r\n                    setAxiosUserData(res)\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosUpdateAccount: async ({ fileData, descripotion, username, location, userId }: UpdateUserProps) => {\r\n\r\n            const getReadAsDataURL = (file: any) => {\r\n                return new Promise((resolve, reject) => {\r\n                    const reader = new FileReader();\r\n                    reader.addEventListener('load', () => {\r\n                        resolve(reader.result);\r\n                    });\r\n                    reader.readAsDataURL(file);\r\n                })\r\n            }\r\n            const dataUrl: any = fileData === undefined ? null : await getReadAsDataURL(fileData)\r\n\r\n\r\n            const axiosUpdate = async (arrayBuffer: any) => {\r\n\r\n                const res = axios.post(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`, {\r\n                    username: username,\r\n                    description: descripotion,\r\n                    pictureUrl: arrayBuffer\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${location.jwtString} `\r\n                    },\r\n                })\r\n                return res\r\n            }\r\n            axiosUpdate(dataUrl)\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const memberId = res.data.result.id\r\n                    const username = res.data.result.username\r\n                    setAxiosUserData({ ...axiosUserData, memberId: memberId, username: username })\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"hooks\", err)\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosGetSigleUserData: (userId: string) => {\r\n            const axiosGetSignUser = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = await axios.get(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`)\r\n                return res\r\n            }\r\n            axiosGetSignUser()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    return res\r\n                })\r\n                .then((res) => {\r\n                    setUserData(res.data.result)\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosDeleteUserData: ({ userId, jwtString }: { userId: string, jwtString: string | undefined }) => {\r\n            const axiosDeleteUser = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = await axios.delete(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${jwtString} `\r\n                    }\r\n                })\r\n                return res\r\n            }\r\n            axiosDeleteUser()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n\r\n        },\r\n        axiosGetAllUserData: () => {\r\n            setAxiosStatus(\"loading\")\r\n            const axiosGetAllUser = async () => {\r\n                const res = axios.get(\"https://weblab-react-special-midtern.herokuapp.com/v1/users/\")\r\n                return res\r\n            }\r\n            axiosGetAllUser()\r\n                .then((res: any) => {\r\n                    setMessage(res.data.message)\r\n                    setAxiosUserListData(res.data.result)\r\n                }).then(() => {\r\n                    setAxiosStatus(\"success\")\r\n\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\LogOut.tsx",["84"],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Logout.tsx",["85"],"import React from 'react'\r\nimport styled from \"styled-components\"\r\nimport { outLineBlue, headerBlue } from \"../../styles/General\"\r\nimport { Link, RouteComponentProps } from \"react-router-dom\"\r\n\r\nconst WHeaderBlock = styled.div`\r\n    width:100%;\r\n    height:50px;\r\n    background-color: ${headerBlue};\r\n    border: 2px solid ${outLineBlue};\r\n    box-sizing: border-box;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 20px;\r\n`\r\n\r\nconst WLoginButton = styled.button`\r\n    padding: 5px 10px;\r\n    color: ${outLineBlue};\r\n    cursor:pointer;\r\n    border: 2px solid ${outLineBlue};\r\n    &:active{\r\n        border: 2px solid ${outLineBlue};\r\n        background-color: #ddd;\r\n    }\r\n    &:focus{\r\n        outline: 1px solid  ${outLineBlue};\r\n    }\r\n`\r\n\r\nconst WTitle = styled.div`\r\n    font-size:16px;\r\n    color:blue;\r\n    cursor:pointer;\r\n`\r\n\r\n// const \r\ninterface LoginOutProps extends RouteComponentProps {\r\n\r\n}\r\n\r\nexport const Logout: React.FC<LoginOutProps> = ({ history }) => {\r\n    const handleHomeTitle = () => {\r\n        const locationState = {\r\n            pathname: \"/UserListPage/users/\",\r\n            state: history.location.state\r\n        }\r\n        history.push(locationState)\r\n    }\r\n    const handleLoginOutButton = () => {\r\n        const locationState = {\r\n            pathname: \"/LoginPage/login\",\r\n            state: undefined\r\n        }\r\n        history.push(locationState)\r\n    }\r\n\r\n\r\n    return (\r\n        <WHeaderBlock>\r\n            <WTitle onClick={() => handleHomeTitle()}>Home</WTitle>\r\n            <WLoginButton onClick={() => handleLoginOutButton()}>登出</WLoginButton>\r\n        </WHeaderBlock >\r\n    );\r\n}","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Login.tsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":48,"column":8,"nodeType":"96","endLine":48,"endColumn":19,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"95","line":52,"column":8,"nodeType":"96","endLine":52,"endColumn":19,"suggestions":"98"},{"ruleId":"90","severity":1,"message":"99","line":12,"column":19,"nodeType":"92","messageId":"93","endLine":12,"endColumn":28},{"ruleId":"94","severity":1,"message":"100","line":80,"column":8,"nodeType":"96","endLine":80,"endColumn":10,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"102","line":101,"column":8,"nodeType":"96","endLine":101,"endColumn":20,"suggestions":"103"},{"ruleId":"90","severity":1,"message":"99","line":4,"column":19,"nodeType":"92","messageId":"93","endLine":4,"endColumn":28},{"ruleId":"90","severity":1,"message":"104","line":76,"column":11,"nodeType":"92","messageId":"93","endLine":76,"endColumn":19},{"ruleId":"94","severity":1,"message":"105","line":100,"column":8,"nodeType":"96","endLine":100,"endColumn":28,"suggestions":"106"},{"ruleId":"94","severity":1,"message":"107","line":115,"column":8,"nodeType":"96","endLine":115,"endColumn":21,"suggestions":"108"},{"ruleId":"90","severity":1,"message":"109","line":114,"column":26,"nodeType":"92","messageId":"93","endLine":114,"endColumn":39},{"ruleId":"94","severity":1,"message":"110","line":132,"column":8,"nodeType":"96","endLine":132,"endColumn":19,"suggestions":"111"},{"ruleId":"90","severity":1,"message":"112","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"113","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":14},{"ruleId":"90","severity":1,"message":"113","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":14},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosStatus', 'axiosUserData', 'history', and 'message'. Either include them or remove the dependency array.","ArrayExpression",["116"],["117"],"'Jumbotron' is defined but never used.","React Hook useEffect has a missing dependency: 'axiosGetAllUserData'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'axiosUserListData' and 'userList'. Either include them or remove the dependency array.",["119"],"'UserData' is defined but never used.","React Hook useEffect has a missing dependency: 'axiosGetSigleUserData'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'axiosUserData', 'errorCode', 'history', and 'message'. Either include them or remove the dependency array.",["121"],"'axiosUserData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosStatus', 'message', and 'setEditDom'. Either include them or remove the dependency array. If 'setEditDom' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["122"],"'React' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"123","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"123","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [axiosStatus, axiosUserData, errorCode, history, message]",{"range":"135","text":"136"},{"range":"137","text":"136"},"Update the dependencies array to be: [axiosGetAllUserData]",{"range":"138","text":"139"},"Update the dependencies array to be: [axiosUserListData, seachValue, userList]",{"range":"140","text":"141"},"Update the dependencies array to be: [userId, editStatus, axiosGetSigleUserData]",{"range":"142","text":"143"},{"range":"144","text":"136"},"Update the dependencies array to be: [axiosStatus, errorCode, message, setEditDom]",{"range":"145","text":"146"},[1493,1504],"[axiosStatus, axiosUserData, errorCode, history, message]",[1687,1698],[2145,2147],"[axiosGetAllUserData]",[2832,2844],"[axiosUserListData, seachValue, userList]",[2484,2504],"[userId, editStatus, axiosGetSigleUserData]",[3021,3034],[2996,3007],"[axiosStatus, errorCode, message, setEditDom]"]