[{"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\index.tsx":"1","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts":"2","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\App.tsx":"3","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx":"4","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx":"5","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx":"6","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\hook.ts":"7","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx":"8","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Logout.tsx":"9","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Login.tsx":"10","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\Spinner.tsx":"11","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\WebTopBlock.tsx":"12","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\Pagination.tsx":"13","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserInfoPage\\EditorPage.tsx":"14","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserInfoPage\\UserInfoPage.tsx":"15"},{"size":500,"mtime":1609832668110,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1609832668110,"results":"18","hashOfConfig":"17"},{"size":1085,"mtime":1616677197783,"results":"19","hashOfConfig":"17"},{"size":3483,"mtime":1616660658191,"results":"20","hashOfConfig":"17"},{"size":6337,"mtime":1616677355137,"results":"21","hashOfConfig":"17"},{"size":2876,"mtime":1616523494781,"results":"22","hashOfConfig":"17"},{"size":9068,"mtime":1616321150517,"results":"23","hashOfConfig":"17"},{"size":1901,"mtime":1616576576793,"results":"24","hashOfConfig":"17"},{"size":1393,"mtime":1616470333342,"results":"25","hashOfConfig":"17"},{"size":823,"mtime":1616470315342,"results":"26","hashOfConfig":"17"},{"size":2966,"mtime":1616524223134,"results":"27","hashOfConfig":"17"},{"size":323,"mtime":1616323769642,"results":"28","hashOfConfig":"17"},{"size":4149,"mtime":1616578195139,"results":"29","hashOfConfig":"17"},{"size":5277,"mtime":1616677586219,"results":"30","hashOfConfig":"17"},{"size":6866,"mtime":1616677483374,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ip3q26",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\index.tsx",[],["67","68"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\App.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx",["69"],"import React, { useRef, useEffect } from 'react'\r\nimport { WInput, WSubmitButton, WTag } from \"../../styles/General\"\r\nimport { RouteComponentProps, Link } from 'react-router-dom'\r\nimport styled from \"styled-components\"\r\nimport { WebTopBlock } from \"../../components/WebTopBlock\"\r\nimport { useUser } from \"../../hook\"\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\n// 　沒有選擇圖片　情況\r\n// 　加上必填提醒　\r\n//　沒有更新des　情況\r\n// 更新完回到　尚未編輯頁　\r\n\r\nexport const CreateAccount: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n    const emailRef = useRef<HTMLInputElement>(null)\r\n    const passwordRef = useRef<HTMLInputElement>(null)\r\n    const nameRef = useRef<HTMLInputElement>(null)\r\n    const { axiosStatus, axiosUserData, errorCode, message, axiosCreateAccount } = useUser()\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            if (axiosUserData) {\r\n                axiosUserData.editMode = true\r\n                const locationUseList = {\r\n                    pathname: `/UserPage/users/${axiosUserData?.memberId}`,\r\n                    state: axiosUserData,\r\n                }\r\n                history.push(locationUseList)\r\n            }\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n\r\n\r\n    }, [errorCode])\r\n\r\n    const handleSubmit = () => {//創一個帳號 render 5次???\r\n        let email: string\r\n        let username: string\r\n        let password: string\r\n\r\n        if (emailRef.current?.value !== undefined && passwordRef.current?.value !== undefined && nameRef.current?.value !== undefined) {\r\n            email = emailRef.current?.value\r\n            password = passwordRef.current?.value\r\n            username = nameRef.current?.value\r\n            axiosCreateAccount({ email, password, username })\r\n        } else {\r\n            alert(\"信箱 使用者名稱　密碼　不能為空白\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <WebTopBlock />\r\n            <WLoginSection>\r\n                <WLoginContainer>\r\n                    <WTagBlock>\r\n                        <WTag>\r\n                            <Link to=\"/LoginPage/login\">會員登入</Link>\r\n                        </WTag>\r\n                        <WTag>\r\n                            <Link to=\"/SignUpPage/signUp\">加入會員</Link>\r\n                        </WTag>\r\n                    </WTagBlock>\r\n                    <WInput placeholder=\"電子信箱\" type=\"email\" ref={emailRef} />\r\n                    <WInput placeholder=\"使用者名稱\" type=\"text\" ref={nameRef} />\r\n                    <WInput placeholder=\"密碼\" type=\"password\" ref={passwordRef} />\r\n                    <WSubmitButton onClick={() => handleSubmit()}>\r\n                        {axiosStatus !== \"loading\" && \"加入\"}\r\n                        {axiosStatus === \"loading\" && <Spinner size=\"sm\" animation=\"border\" />}\r\n                    </WSubmitButton>\r\n                </WLoginContainer>\r\n            </WLoginSection>\r\n        </>\r\n    );\r\n}\r\n\r\nconst WLoginSection = styled.section`\r\n    padding-top:200px;\r\n    padding-bottom:200px;\r\n`\r\n\r\nconst WLoginContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    width:200px;\r\n    flex-direction: column;\r\n    margin:auto;\r\n`\r\n\r\nconst WTagBlock = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`\r\n\r\n","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx",["70","71","72"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx",["73"],"import React, { useRef, useEffect } from 'react'\r\nimport { RouteComponentProps, Link } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\n\r\nimport { useUser } from \"../../hook\"\r\nimport { WInput, WSubmitButton, WTag } from \"../../styles/General\"\r\nimport { WebTopBlock } from \"../../components/WebTopBlock\"\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport const LoginAccount: React.FC<RouteComponentProps> = ({ history }) => {\r\n\r\n    const passwordRef = useRef<HTMLInputElement>(null)\r\n    const nameRef = useRef<HTMLInputElement>(null)\r\n    const { axiosStatus, axiosUserData, errorCode, message, axiosLoginAccount } = useUser()\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            const location = {\r\n                pathname: \"/UserListPage/users\",\r\n                state: axiosUserData\r\n            }\r\n            history.push(location)\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n\r\n    }, [errorCode])\r\n\r\n    const handleSubmit = () => {\r\n        let account: string\r\n        let password: string\r\n        if (nameRef.current?.value !== undefined && passwordRef.current?.value !== undefined) {\r\n            account = nameRef.current?.value\r\n            password = passwordRef.current?.value\r\n            axiosLoginAccount({ password, account })\r\n        } else {\r\n            alert(\"使用者名稱　密碼　不能為空白\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <WebTopBlock />\r\n            <WLoginSection>\r\n                <WLoginContainer>\r\n                    <WTagBlock>\r\n                        <WTag>\r\n                            <Link to=\"/LoginPage/login\">會員登入</Link>\r\n                        </WTag>\r\n                        <WTag>\r\n                            <Link to=\"/SignUpPage/signUp\">加入會員</Link>\r\n                        </WTag>\r\n                    </WTagBlock>\r\n                    <WInput placeholder=\"使用者名稱\" type=\"text\" ref={nameRef} />\r\n                    <WInput placeholder=\"密碼\" type=\"password\" ref={passwordRef} />\r\n                    <WSubmitButton onClick={() => handleSubmit()}>\r\n                        {axiosStatus !== \"loading\" && \"登入\"}\r\n                        {axiosStatus === \"loading\" && <Spinner size=\"sm\" animation=\"border\" />}\r\n                    </WSubmitButton>\r\n                </WLoginContainer>\r\n            </WLoginSection>\r\n        </>\r\n    );\r\n}\r\n\r\nconst WLoginSection = styled.section`\r\n    padding-top:200px;\r\n    padding-bottom:200px;\r\n`\r\n\r\nconst WLoginContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    width:200px;\r\n    flex-direction: column;\r\n    margin:auto;\r\n`\r\n\r\nconst WTagBlock = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\hook.ts",["74"],"import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\ninterface LoginUserProps {\r\n    account: string,\r\n    password: string,\r\n}\r\n\r\ninterface CreateUserProps {\r\n    email: string,\r\n    username: string,\r\n    password: string\r\n}\r\ninterface LocationStateData {\r\n    memberId: string,\r\n    username: string,\r\n    jwtString?: string,\r\n    editMode?: boolean,\r\n\r\n}\r\n\r\ninterface UpdateUserProps {\r\n    //什麼狀態　做什麼事\r\n    // 資料流　狀態流\r\n    fileData: File | undefined,\r\n    description: string | undefined | null,\r\n    username: string | undefined,\r\n    location: LocationStateData,\r\n    userId: string\r\n}\r\n\r\ninterface UserData {\r\n    description: null | string,\r\n    id: string,\r\n    picture_url: string\r\n    username: string\r\n}\r\n\r\nexport const useUser = () => {\r\n    //下次不要這樣包...\r\n    //下次errorCode 可以考慮用 Return 的方式取得 不然render 太多次了\r\n    const [axiosStatus, setAxiosStatus] = useState(\"idle\")\r\n    const [axiosUserData, setAxiosUserData] = useState<LocationStateData>()\r\n    const [errorCode, setErrorCode] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [userData, setUserData] = useState<UserData>()\r\n    const [axiosUserListData, setAxiosUserListData] = useState<UserData[]>()\r\n\r\n\r\n    return {\r\n        axiosUserListData,\r\n        axiosStatus,\r\n        axiosUserData,\r\n        errorCode,\r\n        message,\r\n        userData,\r\n        axiosLoginAccount: ({ account, password }: LoginUserProps) => {\r\n            const axiosLogin = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = axios.post(\"https://api.weblab.tw/v1/auth/general-login\", {\r\n                    appId: \"weblab\",\r\n                    account: account,\r\n                    password: password\r\n                })\r\n                return res\r\n            }\r\n            axiosLogin()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const jwtString = res.data.result.authToken\r\n                    const decoded: LocationStateData = jwtDecode(res.data.result.authToken)\r\n                    console.log(\"decoded\", decoded)\r\n                    const locationState = {\r\n                        memberId: decoded?.memberId,\r\n                        jwtString: jwtString,\r\n                        username: decoded?.username\r\n                    }\r\n                    return locationState\r\n                })\r\n                .then((res) => {\r\n                    setAxiosUserData({ ...res })\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n\r\n        },\r\n        axiosCreateAccount: ({ email, username, password }: CreateUserProps) => {\r\n            const axiosCreate = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = axios.post(\"https://api.weblab.tw/v1/auth/register\", {\r\n                    appId: \"weblab\",\r\n                    email: email,\r\n                    username: username,\r\n                    password: password\r\n                })\r\n                return res\r\n            }\r\n            axiosCreate()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const jwtString = res.data.result.authToken\r\n                    const decoded: LocationStateData = jwtDecode(res.data.result.authToken)\r\n                    console.log(\"decoded\", decoded)\r\n                    const locationState = {\r\n                        memberId: decoded?.memberId,\r\n                        jwtString: jwtString,\r\n                        username: decoded?.username\r\n                    }\r\n                    return locationState\r\n                })\r\n                .then((res) => {\r\n                    setAxiosUserData(res)\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosUpdateAccount: async ({ fileData, description, username, location, userId }: UpdateUserProps) => {\r\n\r\n            const getReadAsDataURL = (file: any) => {\r\n                return new Promise((resolve, reject) => {\r\n                    const reader = new FileReader();\r\n                    reader.addEventListener('load', () => {\r\n                        resolve(reader.result);\r\n                    });\r\n                    reader.readAsDataURL(file);\r\n                })\r\n            }\r\n            const dataUrl: any = fileData === undefined ? null : await getReadAsDataURL(fileData)\r\n\r\n\r\n            const axiosUpdate = async (arrayBuffer: any) => {\r\n\r\n                const res = axios.post(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`, {\r\n                    username: username,\r\n                    description: description,\r\n                    pictureUrl: arrayBuffer\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${location.jwtString} `\r\n                    },\r\n                })\r\n                return res\r\n            }\r\n            axiosUpdate(dataUrl)\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const memberId = res.data.result.id\r\n                    const username = res.data.result.username\r\n                    setAxiosUserData({ ...axiosUserData, memberId: memberId, username: username })\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"hooks\", err)\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosGetSingleUserData: (userId: string) => {\r\n            const axiosGetSignUser = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = await axios.get(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`)\r\n                return res\r\n            }\r\n            axiosGetSignUser()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    return res\r\n                })\r\n                .then((res) => {\r\n                    setUserData(res.data.result)\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosDeleteUserData: ({ userId, jwtString }: { userId: string, jwtString: string | undefined }) => {\r\n            const axiosDeleteUser = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = await axios.delete(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${jwtString} `\r\n                    }\r\n                })\r\n                return res\r\n            }\r\n            axiosDeleteUser()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n\r\n        },\r\n        axiosGetAllUserData: () => {\r\n            setAxiosStatus(\"loading\")\r\n            const axiosGetAllUser = async () => {\r\n                const res = axios.get(\"https://weblab-react-special-midtern.herokuapp.com/v1/users/\")\r\n                return res\r\n            }\r\n            axiosGetAllUser()\r\n                .then((res: any) => {\r\n                    setMessage(res.data.message)\r\n                    setAxiosUserListData(res.data.result)\r\n                }).then(() => {\r\n                    setAxiosStatus(\"success\")\r\n\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Logout.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Login.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\Spinner.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\WebTopBlock.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\Pagination.tsx",["75"],"import React, { useState, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { blue50, gary100, gary500, gary800 } from \"../styles/General\"\r\n\r\n\r\nexport default function Pagination({\r\n    ListLength = 20,\r\n    singlePageItemCount = 5,\r\n\r\n    currentPage = 1,\r\n    onChange = () => console.log(\"page\")\r\n\r\n}: {\r\n    ListLength: number,\r\n    singlePageItemCount: number,\r\n    onChange: (page: number) => void\r\n    currentPage: number,\r\n\r\n\r\n}) {\r\n\r\n    const [pageNumber, setPageNumber] = useState<number>(1)\r\n\r\n    useEffect(() => {\r\n        onChange?.(pageNumber)\r\n    }, [pageNumber])\r\n\r\n    //如果在第二頁時 點其他HeaderTag 則會重新導回第一頁\r\n    useEffect(() => {\r\n        setPageNumber(currentPage)\r\n    }, [currentPage])\r\n\r\n\r\n    const maxPageCount = Math.ceil(ListLength / singlePageItemCount)\r\n\r\n    let isLeftButtonDisable = pageNumber === 1\r\n    let isRightButtonDisable = maxPageCount === pageNumber\r\n\r\n    let pageArrRender: object[] = []\r\n    for (let item = 1; item <= maxPageCount; item++) {\r\n        pageArrRender.push(\r\n            <WPaginationItem key={item} onClick={(e) => handlePageNumberClick(e)}>\r\n                <WNumberItem active={item === pageNumber}>\r\n                    {item}\r\n                </WNumberItem>\r\n            </WPaginationItem>\r\n        )\r\n    }\r\n\r\n    const handlePageNumberClick = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\r\n        const target = e.target as Element\r\n        setPageNumber(Number(target.innerHTML))\r\n\r\n    }\r\n\r\n    const handleLeftClick = () => {\r\n        setPageNumber(prevState => prevState - 1)\r\n\r\n    }\r\n\r\n    const handleRightClick = () => {\r\n        setPageNumber(prevState => prevState + 1)\r\n    }\r\n\r\n    return <>\r\n        <WPaginationList >\r\n            <WPaginationItem>\r\n                <WIconButton\r\n                    onClick={() => handleLeftClick()}\r\n                    cursor={isLeftButtonDisable}\r\n                    disabled={isLeftButtonDisable}>\r\n                    <WLeftIcon\r\n                        icon={faChevronLeft}\r\n                        size=\"sm\" />\r\n                </WIconButton>\r\n            </WPaginationItem>\r\n            {pageArrRender}\r\n            <WPaginationItem>\r\n                <WIconButton\r\n                    onClick={() => handleRightClick()}\r\n                    cursor={isRightButtonDisable}\r\n                    disabled={isRightButtonDisable}>\r\n                    <WRightIcon\r\n                        icon={faChevronRight}\r\n                        size=\"sm\" />\r\n                </WIconButton>\r\n            </WPaginationItem>\r\n        </WPaginationList>\r\n    </>\r\n\r\n}\r\n\r\n\r\nconst WItemHightStyled = css`\r\n    color:${gary800};\r\n    border:solid 1px ${gary500};\r\n`\r\nconst WItemNoHightStyled = css`\r\n    color:${gary100};\r\n    border:solid 1px ${blue50};\r\n`\r\n\r\nconst WItemOnClickStyled = css`\r\n    padding: 0.375rem 0.625rem;\r\n    cursor: pointer;\r\n    line-height: 1;\r\n    border:solid 1px ${blue50};\r\n    color:${gary100};\r\n    transition: all .3s;\r\n    &:hover{\r\n        ${WItemHightStyled}\r\n    }\r\n`\r\n\r\nconst WPaginationList = styled.ul`\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 0.313rem 0.313rem;\r\n    >li + li {\r\n        margin-left:0.313rem;\r\n    }\r\n`\r\n\r\nconst WPaginationItem = styled.li`\r\n    \r\n`\r\n\r\nconst WNumberItem = styled.div<{ active?: boolean }>`\r\n    ${WItemOnClickStyled};\r\n    ${props => props.active ? WItemHightStyled : \"\"};\r\n`\r\n\r\nconst WIconButton = styled.button<{ cursor?: boolean }>`\r\n    ${WItemOnClickStyled};\r\n    \r\n    background-color: transparent;\r\n    cursor: ${props => props.cursor ? \" not-allowed\" : \"pointer\"};\r\n    padding: 0.5rem 0.688rem;\r\n    &:focus{\r\n        outline:none;\r\n    }\r\n    &:hover{\r\n        ${props => props.cursor ? WItemNoHightStyled : WItemHightStyled};\r\n    }\r\n`\r\n\r\nconst WLeftIcon = styled(FontAwesomeIcon)`\r\n    \r\n    width:3.125rem;\r\n`\r\n\r\nconst WRightIcon = styled(FontAwesomeIcon)`\r\n    \r\n    width:3.125rem;\r\n`\r\n\r\n","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserInfoPage\\EditorPage.tsx",["76"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserInfoPage\\UserInfoPage.tsx",["77","78","79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":36,"column":8,"nodeType":"87","endLine":36,"endColumn":19,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":56,"column":8,"nodeType":"87","endLine":56,"endColumn":10,"suggestions":"90"},{"ruleId":"85","severity":1,"message":"91","line":77,"column":8,"nodeType":"87","endLine":77,"endColumn":21,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":121,"column":126,"nodeType":"95","messageId":"96","endLine":121,"endColumn":128},{"ruleId":"85","severity":1,"message":"86","line":27,"column":8,"nodeType":"87","endLine":27,"endColumn":19,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":8,"nodeType":"100","messageId":"101","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"102","line":28,"column":8,"nodeType":"87","endLine":28,"endColumn":20,"suggestions":"103"},{"ruleId":"85","severity":1,"message":"104","line":58,"column":8,"nodeType":"87","endLine":58,"endColumn":19,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"106","line":1,"column":38,"nodeType":"100","messageId":"101","endLine":1,"endColumn":45},{"ruleId":"85","severity":1,"message":"107","line":40,"column":8,"nodeType":"87","endLine":40,"endColumn":28,"suggestions":"108"},{"ruleId":"85","severity":1,"message":"109","line":55,"column":8,"nodeType":"87","endLine":55,"endColumn":21,"suggestions":"110"},{"ruleId":"98","severity":1,"message":"111","line":82,"column":11,"nodeType":"100","messageId":"101","endLine":82,"endColumn":30},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosStatus', 'axiosUserData', 'history', and 'message'. Either include them or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'axiosGetAllUserData'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has missing dependencies: 'axiosUserListData' and 'userList'. Either include them or remove the dependency array.",["116"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["117"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["118"],"React Hook useEffect has missing dependencies: 'axiosStatus', 'message', and 'setEditDom'. Either include them or remove the dependency array. If 'setEditDom' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["119"],"'useMemo' is defined but never used.","React Hook useEffect has a missing dependency: 'axiosGetSingleUserData'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'axiosUserData', 'errorCode', 'history', and 'message'. Either include them or remove the dependency array.",["121"],"'lightBoxEditConfirm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"122","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"122","fix":"135"},"Update the dependencies array to be: [axiosStatus, axiosUserData, errorCode, history, message]",{"range":"136","text":"137"},"Update the dependencies array to be: [axiosGetAllUserData]",{"range":"138","text":"139"},"Update the dependencies array to be: [axiosUserListData, searchValue, userList]",{"range":"140","text":"141"},{"range":"142","text":"137"},"Update the dependencies array to be: [onChange, pageNumber]",{"range":"143","text":"144"},"Update the dependencies array to be: [axiosStatus, errorCode, message, setEditDom]",{"range":"145","text":"146"},"Update the dependencies array to be: [userId, isEditAble, axiosGetSingleUserData]",{"range":"147","text":"148"},{"range":"149","text":"137"},[1297,1308],"[axiosStatus, axiosUserData, errorCode, history, message]",[1698,1700],"[axiosGetAllUserData]",[2387,2400],"[axiosUserListData, searchValue, userList]",[1022,1033],[749,761],"[onChange, pageNumber]",[1501,1512],"[axiosStatus, errorCode, message, setEditDom]",[1414,1434],"[userId, isEditAble, axiosGetSingleUserData]",[1951,1964]]