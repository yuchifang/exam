[{"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\index.tsx":"1","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts":"2","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\App.tsx":"3","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx":"4","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx":"5","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\UserPage.tsx":"6","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx":"7","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\hook.ts":"8","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx":"9","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\EditorPage.tsx":"10","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Logout.tsx":"11","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Login.tsx":"12","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\Spinner.tsx":"13","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\WebTopBlock.tsx":"14"},{"size":500,"mtime":1609832668110,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609832668110,"results":"17","hashOfConfig":"16"},{"size":1828,"mtime":1616320092308,"results":"18","hashOfConfig":"16"},{"size":3479,"mtime":1616523432452,"results":"19","hashOfConfig":"16"},{"size":5154,"mtime":1616524412761,"results":"20","hashOfConfig":"16"},{"size":6736,"mtime":1616471433499,"results":"21","hashOfConfig":"16"},{"size":2876,"mtime":1616523494781,"results":"22","hashOfConfig":"16"},{"size":9068,"mtime":1616321150517,"results":"23","hashOfConfig":"16"},{"size":1767,"mtime":1616471413372,"results":"24","hashOfConfig":"16"},{"size":5211,"mtime":1616471215746,"results":"25","hashOfConfig":"16"},{"size":1393,"mtime":1616470333342,"results":"26","hashOfConfig":"16"},{"size":823,"mtime":1616470315342,"results":"27","hashOfConfig":"16"},{"size":2966,"mtime":1616524223134,"results":"28","hashOfConfig":"16"},{"size":323,"mtime":1616323769642,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ip3q26",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\index.tsx",[],["62","63"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\App.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx",["64"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx",["65","66","67","68","69"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\UserPage.tsx",["70","71","72","73","74"],"import React, { useEffect, useState } from 'react'\r\nimport styled from \"styled-components\"\r\nimport { RouteComponentProps, Route } from \"react-router-dom\"\r\nimport { Jumbotron, Container, Row } from \"react-bootstrap\"\r\nimport { WUserText, WUserImg, WSubmitButton, Blue400 } from \"../../styles/General\"\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Logout } from \"../Header/Logout\"\r\nimport { WebTopBlock } from \"../../components/WebTopBlock\"\r\nimport { EditorPage } from \"./EditorPage\"\r\nimport { useUser } from \"../../hook\"\r\nimport Spinner from '../../components/Spinner'\r\n\r\ninterface TLocation {\r\n\r\n    jwtString?: string,\r\n    username: string,\r\n    memberId: string,\r\n    editMode?: boolean,\r\n\r\n}\r\ninterface UserPageProps extends RouteComponentProps<{ userId: string }, {}, TLocation> {\r\n\r\n}\r\n\r\nexport const UserPage: React.FC<UserPageProps> = ({ history, location, match }) => {\r\n    const [lightBoxStatus, setLightBoxStatus] = useState(false);\r\n    const [editStatus, setEditStatus] = useState(location?.state?.editMode);\r\n    const [lightBoxButtonText, setLightBoxButtonText] = useState(\"\")\r\n\r\n    const { axiosStatus, axiosUserData, errorCode, message, userData, axiosGetSingleUserData, axiosDeleteUserData } = useUser()\r\n\r\n    const { userId } = match.params\r\n\r\n\r\n    const editAuthority = userId === location.state.memberId\r\n    const { state } = location\r\n\r\n    useEffect(() => {\r\n        axiosGetSingleUserData(userId)\r\n\r\n    }, [userId, editStatus])\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            if (message === \"delete the member successfully\") {\r\n                alert(\"刪除成功\")\r\n                const locationState = {\r\n                    pathname: \"/UserListPage/users\",\r\n                    state: axiosUserData\r\n                }\r\n                history.push(locationState)\r\n            }\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n    }, [axiosStatus])\r\n\r\n    const closeLightBox = () => setLightBoxStatus(false);\r\n\r\n    const openLightBox = (text: string) => {\r\n        if (editAuthority && text === \"編輯\") {\r\n            setEditStatus(true)\r\n        } else {\r\n            setLightBoxStatus(true)\r\n            setLightBoxButtonText(text)\r\n        }\r\n\r\n    }\r\n\r\n    const lightBoxCancelConfirm = () => {\r\n        setLightBoxStatus(false)\r\n        axiosDeleteUserData({ userId, jwtString: state.jwtString })\r\n    }\r\n\r\n    const lightBoxEditConfirm = () => {\r\n        setLightBoxStatus(false)\r\n        setEditStatus(true)\r\n    }\r\n\r\n    const cancelEditPage = () => {\r\n        setEditStatus(false)\r\n    }\r\n\r\n    const UserPage = () => <>\r\n        <WUserPageSection>\r\n            <WUserPageContainer>\r\n                <WUserBlock>\r\n                    <WUserImgList src={userData?.picture_url} alt=\"userImg\" />\r\n                    <WUserText>username__{userData?.username}</WUserText>\r\n                </WUserBlock>\r\n                <WUserDescription>description__\r\n                    {!!userData?.description === false && \"no description here\"}\r\n                    {!!userData?.description === true && userData?.description}\r\n                </WUserDescription>\r\n                <WButtonBlock>\r\n                    {/* 下次遇到可以考慮用disable 來控制 */}\r\n                    <WEditButton onClick={() => openLightBox(\"編輯\")}>編輯</WEditButton>\r\n                    <WDeleteUser onClick={() => openLightBox(\"刪除\")}>刪除此使用者</WDeleteUser>\r\n                </WButtonBlock>\r\n            </WUserPageContainer>\r\n        </WUserPageSection>\r\n    </>\r\n\r\n\r\n    return (\r\n        <>\r\n            <WebTopBlock />\r\n            <Route component={Logout} />\r\n            {axiosStatus === \"success\" && !editStatus && <UserPage />}\r\n\r\n            {axiosStatus === \"success\" && !!editStatus &&\r\n                <EditorPage\r\n                    userId={userId}\r\n                    userData={userData}\r\n                    cancelEditPage={cancelEditPage}\r\n                    editDom={editStatus}\r\n                    setEditDom={setEditStatus}\r\n                    editorLocation={state}\r\n\r\n\r\n                />}\r\n            {axiosStatus === \"loading\" && <Spinner />}\r\n            <LightBox //render props?\r\n                lightBoxText={lightBoxButtonText}\r\n                show={lightBoxStatus}\r\n                closeLightBox={closeLightBox}\r\n                editAuthority={editAuthority}\r\n                lightBoxDeleteConfirm={lightBoxCancelConfirm}\r\n                lightBoxEditConfirm={lightBoxEditConfirm} />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nconst LightBox = ({ lightBoxText, show, editAuthority, closeLightBox: closeDeleteLightBox, lightBoxDeleteConfirm, lightBoxEditConfirm }:\r\n    {\r\n        lightBoxText: string,\r\n        show: boolean,\r\n        editAuthority: boolean,\r\n        closeLightBox: () => void,\r\n        lightBoxDeleteConfirm: () => void,\r\n        lightBoxEditConfirm: () => void,\r\n    }) => (\r\n    <Modal show={show} onHide={closeDeleteLightBox}>\r\n        <Modal.Header closeButton>\r\n            {editAuthority && <Modal.Title>{lightBoxText}此使用者</Modal.Title>}\r\n            {!editAuthority && <Modal.Title>你非此使用者　無法{lightBoxText}</Modal.Title>}\r\n        </Modal.Header>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={closeDeleteLightBox}>取消</Button>\r\n            {\r\n                editAuthority && lightBoxText === \"刪除\" &&\r\n                < Button variant=\"danger\" onClick={lightBoxDeleteConfirm}>確認</Button>\r\n            }\r\n            {\r\n                editAuthority && lightBoxText === \"編輯\" &&\r\n                < Button variant=\"danger\" onClick={lightBoxEditConfirm}>確認</Button>\r\n            }\r\n        </Modal.Footer>\r\n    </Modal >\r\n)\r\n\r\nconst WUserPageSection = styled.section`\r\n    padding-top:100px;\r\n    padding-bottom:100px;\r\n`\r\n\r\nconst WUserPageContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    max-width:1000px;\r\n    margin:auto;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0 150px;\r\n`\r\n\r\nconst WUserImgList = styled(WUserImg)`\r\n    margin: 0 auto 20px auto;\r\n    \r\n`\r\n\r\nconst WUserBlock = styled.figure`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst WUserDescription = styled.article`\r\n    font-size:16px;\r\n`\r\n\r\nconst WButtonBlock = styled.div`\r\n\r\n`\r\n\r\nconst WEditButton = styled(WSubmitButton)`\r\n    background-color:white;\r\n    color: ${Blue400};\r\n    border:solid 1px  ${Blue400};\r\n    &:hover{\r\n        background-color:${Blue400};\r\n        color:white;\r\n    }\r\n`\r\n\r\nconst WDeleteUser = styled.a`\r\n    color:red;\r\n    &:hover {\r\n        color:red;\r\n        cursor:pointer;\r\n    }\r\n`","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx",["75"],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\hook.ts",["76"],"import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\ninterface LoginUserProps {\r\n    account: string,\r\n    password: string,\r\n}\r\n\r\ninterface CreateUserProps {\r\n    email: string,\r\n    username: string,\r\n    password: string\r\n}\r\ninterface LocationStateData {\r\n    memberId: string,\r\n    username: string,\r\n    jwtString?: string,\r\n    editMode?: boolean,\r\n\r\n}\r\n\r\ninterface UpdateUserProps {\r\n    //什麼狀態　做什麼事\r\n    // 資料流　狀態流\r\n    fileData: File | undefined,\r\n    description: string | undefined | null,\r\n    username: string | undefined,\r\n    location: LocationStateData,\r\n    userId: string\r\n}\r\n\r\ninterface UserData {\r\n    description: null | string,\r\n    id: string,\r\n    picture_url: string\r\n    username: string\r\n}\r\n\r\nexport const useUser = () => {\r\n    //下次不要這樣包...\r\n    //下次errorCode 可以考慮用 Return 的方式取得 不然render 太多次了\r\n    const [axiosStatus, setAxiosStatus] = useState(\"idle\")\r\n    const [axiosUserData, setAxiosUserData] = useState<LocationStateData>()\r\n    const [errorCode, setErrorCode] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [userData, setUserData] = useState<UserData>()\r\n    const [axiosUserListData, setAxiosUserListData] = useState<UserData[]>()\r\n\r\n\r\n    return {\r\n        axiosUserListData,\r\n        axiosStatus,\r\n        axiosUserData,\r\n        errorCode,\r\n        message,\r\n        userData,\r\n        axiosLoginAccount: ({ account, password }: LoginUserProps) => {\r\n            const axiosLogin = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = axios.post(\"https://api.weblab.tw/v1/auth/general-login\", {\r\n                    appId: \"weblab\",\r\n                    account: account,\r\n                    password: password\r\n                })\r\n                return res\r\n            }\r\n            axiosLogin()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const jwtString = res.data.result.authToken\r\n                    const decoded: LocationStateData = jwtDecode(res.data.result.authToken)\r\n                    console.log(\"decoded\", decoded)\r\n                    const locationState = {\r\n                        memberId: decoded?.memberId,\r\n                        jwtString: jwtString,\r\n                        username: decoded?.username\r\n                    }\r\n                    return locationState\r\n                })\r\n                .then((res) => {\r\n                    setAxiosUserData({ ...res })\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n\r\n        },\r\n        axiosCreateAccount: ({ email, username, password }: CreateUserProps) => {\r\n            const axiosCreate = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = axios.post(\"https://api.weblab.tw/v1/auth/register\", {\r\n                    appId: \"weblab\",\r\n                    email: email,\r\n                    username: username,\r\n                    password: password\r\n                })\r\n                return res\r\n            }\r\n            axiosCreate()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const jwtString = res.data.result.authToken\r\n                    const decoded: LocationStateData = jwtDecode(res.data.result.authToken)\r\n                    console.log(\"decoded\", decoded)\r\n                    const locationState = {\r\n                        memberId: decoded?.memberId,\r\n                        jwtString: jwtString,\r\n                        username: decoded?.username\r\n                    }\r\n                    return locationState\r\n                })\r\n                .then((res) => {\r\n                    setAxiosUserData(res)\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosUpdateAccount: async ({ fileData, description, username, location, userId }: UpdateUserProps) => {\r\n\r\n            const getReadAsDataURL = (file: any) => {\r\n                return new Promise((resolve, reject) => {\r\n                    const reader = new FileReader();\r\n                    reader.addEventListener('load', () => {\r\n                        resolve(reader.result);\r\n                    });\r\n                    reader.readAsDataURL(file);\r\n                })\r\n            }\r\n            const dataUrl: any = fileData === undefined ? null : await getReadAsDataURL(fileData)\r\n\r\n\r\n            const axiosUpdate = async (arrayBuffer: any) => {\r\n\r\n                const res = axios.post(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`, {\r\n                    username: username,\r\n                    description: description,\r\n                    pictureUrl: arrayBuffer\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${location.jwtString} `\r\n                    },\r\n                })\r\n                return res\r\n            }\r\n            axiosUpdate(dataUrl)\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    const memberId = res.data.result.id\r\n                    const username = res.data.result.username\r\n                    setAxiosUserData({ ...axiosUserData, memberId: memberId, username: username })\r\n                })\r\n                .then((res) => {\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"hooks\", err)\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosGetSingleUserData: (userId: string) => {\r\n            const axiosGetSignUser = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = await axios.get(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`)\r\n                return res\r\n            }\r\n            axiosGetSignUser()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    return res\r\n                })\r\n                .then((res) => {\r\n                    setUserData(res.data.result)\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n        },\r\n        axiosDeleteUserData: ({ userId, jwtString }: { userId: string, jwtString: string | undefined }) => {\r\n            const axiosDeleteUser = async () => {\r\n                setAxiosStatus(\"loading\")\r\n                const res = await axios.delete(`https://weblab-react-special-midtern.herokuapp.com/v1/users/${userId}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${jwtString} `\r\n                    }\r\n                })\r\n                return res\r\n            }\r\n            axiosDeleteUser()\r\n                .then((res) => {\r\n                    setMessage(res.data.message)\r\n                    setAxiosStatus(\"success\")\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n                })\r\n\r\n        },\r\n        axiosGetAllUserData: () => {\r\n            setAxiosStatus(\"loading\")\r\n            const axiosGetAllUser = async () => {\r\n                const res = axios.get(\"https://weblab-react-special-midtern.herokuapp.com/v1/users/\")\r\n                return res\r\n            }\r\n            axiosGetAllUser()\r\n                .then((res: any) => {\r\n                    setMessage(res.data.message)\r\n                    setAxiosUserListData(res.data.result)\r\n                }).then(() => {\r\n                    setAxiosStatus(\"success\")\r\n\r\n                })\r\n                .then(() => {\r\n                    setErrorCode(\"success no error\")\r\n\r\n                })\r\n                .catch((err) => {\r\n                    setAxiosStatus(\"error\")\r\n                    setErrorCode(err)\r\n\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\EditorPage.tsx",["77"],"\r\nimport React, { useRef, useState, useEffect } from 'react'\r\nimport styled from \"styled-components\"\r\nimport { WUserImg, WSubmitButton, Blue400 } from \"../../styles/General\"\r\nimport { useUser } from \"../../hook\"\r\n\r\ninterface TLocation {\r\n\r\n    jwtString?: string,\r\n    username: string,\r\n    memberId: string,\r\n    editMode?: boolean,\r\n\r\n}\r\ninterface EditorPageProps {\r\n    userData?: {\r\n        description: null | string,\r\n        id: string,\r\n        picture_url: string\r\n        username: string\r\n    }\r\n    cancelEditPage: () => void,\r\n    editDom: boolean | undefined,\r\n    setEditDom: React.Dispatch<React.SetStateAction<boolean | undefined>>,\r\n    userId: string,\r\n    editorLocation: TLocation\r\n}\r\n\r\nexport const EditorPage: React.FC<EditorPageProps> = ({\r\n    userData,\r\n    cancelEditPage,\r\n    setEditDom,\r\n    editDom,\r\n    userId,\r\n    editorLocation\r\n}) => {\r\n    const fileRef = useRef<HTMLInputElement>(null)\r\n    const usernameRef = useRef<HTMLInputElement>(null)\r\n    const textAreaRef = useRef<HTMLTextAreaElement>(null)\r\n    const [imgUrl, setImgUrl] = useState<string>(\"\")\r\n    let userImgUrl = imgUrl ? imgUrl : userData?.picture_url\r\n\r\n    const { axiosStatus, errorCode, message, axiosUpdateAccount } = useUser()\r\n\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            alert(\"更新成功\")\r\n            setEditDom(false)\r\n\r\n        }\r\n\r\n        if (axiosStatus === \"error\") {\r\n\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n\r\n    }, [errorCode])\r\n\r\n    const EditPageSave = () => {\r\n\r\n        let description: string | null | undefined = !!textAreaRef?.current?.value ? textAreaRef?.current?.value : null\r\n        let username: string | undefined = !!usernameRef?.current?.value ? usernameRef?.current?.value : editorLocation.username\r\n        let fileData: File | undefined\r\n        if (fileRef.current?.files !== null) {\r\n            fileData = fileRef.current?.files[0]\r\n            axiosUpdateAccount({ fileData, username, description, userId, location: editorLocation })\r\n        } else {\r\n            alert(\"使用者名稱 為必填\")\r\n        }\r\n\r\n    }\r\n\r\n    const handleImgChange = () => {\r\n        let fileData: File | undefined\r\n        if (fileRef.current?.files !== null) {\r\n            if (fileRef.current?.files[0]?.name !== \"\") {\r\n\r\n                fileData = fileRef.current?.files[0]\r\n                if (fileData?.size !== undefined && fileData?.size < 300000) {\r\n                    setImgUrl(URL.createObjectURL(fileData))\r\n                } else {\r\n                    alert(\"上傳失敗　圖片請勿超過３００ＫＢ\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <WUserPageSection>\r\n            <WUserPageContainer>\r\n                <WUserBlock>\r\n                    <WUserImgList src={userImgUrl} alt=\"userImg\" />\r\n                    <WFileBlock>\r\n                        <WInputFile\r\n                            onChange={() => handleImgChange()}\r\n                            accept=\"image/*\"\r\n                            ref={fileRef}\r\n                            type=\"file\"\r\n                            id=\"file\" />\r\n                        <WLabelFile htmlFor=\"file\" >選擇檔案</WLabelFile>\r\n                        <WWarningSpan>上限300KB</WWarningSpan>\r\n                    </WFileBlock>\r\n                    <WUserTextInput required ref={usernameRef} placeholder={userData?.username} />\r\n                </WUserBlock>\r\n                <WUserDescriptionTextArea ref={textAreaRef} rows={4} cols={50} placeholder={!!userData?.description ? userData?.description : \"type something\"} />\r\n                <WButtonBlock>\r\n                    <WEditButton onClick={() => cancelEditPage()}>取消</WEditButton>\r\n                    <WEditButton onClick={() => EditPageSave()}>儲存</WEditButton>\r\n                </WButtonBlock>\r\n            </WUserPageContainer>\r\n        </WUserPageSection>\r\n    );\r\n}\r\n\r\nconst WUserPageSection = styled.section`\r\n    padding-top:100px;\r\n    padding-bottom:100px;\r\n`\r\n\r\nconst WUserPageContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    max-width:1000px;\r\n    margin:auto;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0 150px;\r\n`\r\n\r\nconst WUserImgList = styled(WUserImg)`\r\n    margin: 0 auto 20px auto;\r\n    \r\n`\r\n\r\nconst WUserBlock = styled.figure`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\n\r\n\r\nconst WButtonBlock = styled.div`\r\n\r\n`\r\n\r\nconst WEditButton = styled(WSubmitButton)`\r\n    background-color:white;\r\n    color: ${Blue400};\r\n    border:solid 1px  ${Blue400};\r\n    &:hover{\r\n        background-color:${Blue400};\r\n        color:white;\r\n    }\r\n`\r\n\r\n\r\nconst WFileBlock = styled.div`\r\n    display:flex;\r\n    align-items: baseline;    \r\n`\r\n\r\nconst WWarningSpan = styled.span`\r\n    margin-left:10px;\r\n`\r\n\r\nconst WInputFile = styled.input`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    opacity: 0;\r\n`\r\n\r\nconst WLabelFile = styled.label`\r\n    border: solid #222 1px;\r\n    padding:5px 8px;\r\n    border-radius: 5px; \r\n    cursor:pointer;\r\n`\r\n\r\nconst WUserTextInput = styled.input`\r\n\r\n`\r\n\r\nconst WUserDescriptionTextArea = styled.textarea`\r\n\r\n`\r\n","D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Logout.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\Login.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\Spinner.tsx",[],"D:\\work\\Font-end\\React\\WebTeam\\BasicLogin_exam\\src\\components\\WebTopBlock.tsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":36,"column":8,"nodeType":"84","endLine":36,"endColumn":19,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":12,"column":10,"nodeType":"88","messageId":"89","endLine":12,"endColumn":19},{"ruleId":"86","severity":1,"message":"90","line":12,"column":21,"nodeType":"88","messageId":"89","endLine":12,"endColumn":24},{"ruleId":"82","severity":1,"message":"91","line":40,"column":8,"nodeType":"84","endLine":40,"endColumn":10,"suggestions":"92"},{"ruleId":"82","severity":1,"message":"93","line":61,"column":8,"nodeType":"84","endLine":61,"endColumn":21,"suggestions":"94"},{"ruleId":"86","severity":1,"message":"95","line":80,"column":11,"nodeType":"88","messageId":"89","endLine":80,"endColumn":21},{"ruleId":"86","severity":1,"message":"96","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":4,"column":21,"nodeType":"88","messageId":"89","endLine":4,"endColumn":30},{"ruleId":"86","severity":1,"message":"90","line":4,"column":32,"nodeType":"88","messageId":"89","endLine":4,"endColumn":35},{"ruleId":"82","severity":1,"message":"97","line":41,"column":8,"nodeType":"84","endLine":41,"endColumn":28,"suggestions":"98"},{"ruleId":"82","severity":1,"message":"99","line":56,"column":8,"nodeType":"84","endLine":56,"endColumn":21,"suggestions":"100"},{"ruleId":"82","severity":1,"message":"83","line":27,"column":8,"nodeType":"84","endLine":27,"endColumn":19,"suggestions":"101"},{"ruleId":"86","severity":1,"message":"102","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":13},{"ruleId":"82","severity":1,"message":"103","line":58,"column":8,"nodeType":"84","endLine":58,"endColumn":19,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosStatus', 'axiosUserData', 'history', and 'message'. Either include them or remove the dependency array.","ArrayExpression",["107"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'axiosGetAllUserData'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has missing dependencies: 'axiosUserListData' and 'userList'. Either include them or remove the dependency array.",["109"],"'Pagination' is assigned a value but never used.","'Jumbotron' is defined but never used.","React Hook useEffect has a missing dependency: 'axiosGetSingleUserData'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has missing dependencies: 'axiosUserData', 'errorCode', 'history', and 'message'. Either include them or remove the dependency array.",["111"],["112"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'axiosStatus', 'message', and 'setEditDom'. Either include them or remove the dependency array. If 'setEditDom' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"114","fix":"122"},{"desc":"114","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [axiosStatus, axiosUserData, errorCode, history, message]",{"range":"126","text":"127"},"Update the dependencies array to be: [axiosGetAllUserData]",{"range":"128","text":"129"},"Update the dependencies array to be: [axiosUserListData, searchValue, userList]",{"range":"130","text":"131"},"Update the dependencies array to be: [userId, editStatus, axiosGetSingleUserData]",{"range":"132","text":"133"},{"range":"134","text":"127"},{"range":"135","text":"127"},"Update the dependencies array to be: [axiosStatus, errorCode, message, setEditDom]",{"range":"136","text":"137"},[1293,1304],"[axiosStatus, axiosUserData, errorCode, history, message]",[1338,1340],"[axiosGetAllUserData]",[2027,2040],"[axiosUserListData, searchValue, userList]",[1449,1469],"[userId, editStatus, axiosGetSingleUserData]",[1986,1999],[1022,1033],[1513,1524],"[axiosStatus, errorCode, message, setEditDom]"]