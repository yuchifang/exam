[{"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\index.tsx":"1","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts":"2","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\App.tsx":"3","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\components\\FirstTopBlock.tsx":"4","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\HomePage.tsx":"5","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx":"6","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx":"7","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\LoginIn.tsx":"8","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\LoginOut.tsx":"9","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx":"10","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx":"11","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\UserPage.tsx":"12","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\EditorPage.tsx":"13","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\hook.ts":"14"},{"size":500,"mtime":1609832668110,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609832668110,"results":"17","hashOfConfig":"16"},{"size":1643,"mtime":1611343252902,"results":"18","hashOfConfig":"16"},{"size":394,"mtime":1611296257283,"results":"19","hashOfConfig":"16"},{"size":1767,"mtime":1611308602126,"results":"20","hashOfConfig":"16"},{"size":3045,"mtime":1611338066569,"results":"21","hashOfConfig":"16"},{"size":3508,"mtime":1611337404992,"results":"22","hashOfConfig":"16"},{"size":1112,"mtime":1611296237824,"results":"23","hashOfConfig":"16"},{"size":1703,"mtime":1611342141512,"results":"24","hashOfConfig":"16"},{"size":3009,"mtime":1611343216573,"results":"25","hashOfConfig":"16"},{"size":1555,"mtime":1611343023906,"results":"26","hashOfConfig":"16"},{"size":6813,"mtime":1611342598843,"results":"27","hashOfConfig":"16"},{"size":5367,"mtime":1611337457055,"results":"28","hashOfConfig":"16"},{"size":8956,"mtime":1611341812921,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1u1604l",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\index.tsx",[],["62","63"],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\reportWebVitals.ts",[],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\App.tsx",[],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\components\\FirstTopBlock.tsx",[],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\HomePage.tsx",["64"],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\LoginAccount.tsx",["65"],"import React, { useRef, useEffect } from 'react'\r\nimport { WInput, WSubmitButtom, WTag } from \"../../styles/General\"\r\n\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { FirstTopBlock } from \"../../components/FirstTopBlock\"\r\nimport { RouteComponentProps, Link } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { useUser } from \"../../hook\"\r\n\r\nconst WLoginSection = styled.section`\r\n    padding-top:200px;\r\n    padding-bottom:200px;\r\n`\r\nconst WLoginContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    width:200px;\r\n    flex-direction: column;\r\n    margin:auto;\r\n`\r\nconst WTagBlock = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`\r\ninterface LoginAccountProps extends RouteComponentProps {\r\n\r\n}\r\n\r\n// interface DecodedData {\r\n//     memberId: string,\r\n//     username: string\r\n// }\r\n\r\nexport const LoginAccount: React.FC<LoginAccountProps> = ({ history, match, location }) => {\r\n\r\n    const passwordRef = useRef<HTMLInputElement>(null)\r\n    const nameRef = useRef<HTMLInputElement>(null)\r\n    const { axiosStatus, axiosUserData, errorCode, message, axiosLoginAccount } = useUser()\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            const location = {\r\n                pathname: \"/UserListPage/users\",\r\n                state: axiosUserData\r\n            }\r\n            history.push(location)\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n\r\n\r\n    }, [errorCode])\r\n\r\n    const handleSubmit = () => {\r\n        let account: string\r\n        let password: string\r\n        if (nameRef.current?.value !== undefined && passwordRef.current?.value !== undefined) {\r\n            account = nameRef.current?.value\r\n            password = passwordRef.current?.value\r\n            axiosLoginAccount({ password, account })\r\n        } else {\r\n            alert(\"使用者名稱　密碼　不能為空白\")\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <FirstTopBlock />\r\n            <WLoginSection>\r\n                <WLoginContainer>\r\n                    <WTagBlock>\r\n                        <WTag>\r\n                            <Link to=\"/LoginPage/login\">會員登入</Link>\r\n                        </WTag>\r\n                        <WTag>\r\n                            <Link to=\"/SignupPage/signup\">加入會員</Link>\r\n                        </WTag>\r\n                    </WTagBlock>\r\n                    <WInput placeholder=\"使用者名稱\" type=\"text\" ref={nameRef} />\r\n                    <WInput placeholder=\"密碼\" type=\"password\" ref={passwordRef} />\r\n                    <WSubmitButtom onClick={() => handleSubmit()}>\r\n                        {axiosStatus !== \"loading\" && \"登入\"}\r\n                        {axiosStatus === \"loading\" && <Spinner size=\"sm\" animation=\"border\" />}\r\n                    </WSubmitButtom>\r\n                </WLoginContainer>\r\n            </WLoginSection>\r\n        </>\r\n    );\r\n}","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\HomePage\\CreateAccount.tsx",["66"],"import React, { useRef, useEffect } from 'react'\r\nimport { WInput, WSubmitButtom, WTag } from \"../../styles/General\"\r\nimport { RouteComponentProps, Link } from 'react-router-dom'\r\nimport styled from \"styled-components\"\r\nimport { FirstTopBlock } from \"../../components/FirstTopBlock\"\r\nimport { useUser } from \"../../hook\"\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst WLoginSection = styled.section`\r\n    padding-top:200px;\r\n    padding-bottom:200px;\r\n`\r\nconst WLoginContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    width:200px;\r\n    flex-direction: column;\r\n    margin:auto;\r\n`\r\nconst WTagBlock = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`\r\ninterface CreateAccountProps extends RouteComponentProps {\r\n\r\n}\r\n\r\nexport const CreateAccount: React.FC<CreateAccountProps> = ({ history }) => {\r\n\r\n    const emailRef = useRef<HTMLInputElement>(null)\r\n    const passwordRef = useRef<HTMLInputElement>(null)\r\n    const nameRef = useRef<HTMLInputElement>(null)\r\n    const { axiosStatus, axiosUserData, errorCode, message, axiosCreateAccount } = useUser()\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            if (axiosUserData) {\r\n                axiosUserData.editMode = true\r\n                const locationUseList = {\r\n                    pathname: `/UserPage/users/${axiosUserData?.memberId}`,\r\n                    state: axiosUserData,\r\n                }\r\n                history.push(locationUseList)\r\n            }\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n\r\n\r\n    }, [errorCode])\r\n\r\n    const handleSubmit = () => {\r\n        let email: string\r\n        let username: string\r\n        let password: string\r\n\r\n        if (emailRef.current?.value !== undefined && passwordRef.current?.value !== undefined && nameRef.current?.value !== undefined) {\r\n            email = emailRef.current?.value\r\n            password = passwordRef.current?.value\r\n            username = nameRef.current?.value\r\n            axiosCreateAccount({ email, password, username })\r\n        } else {\r\n            alert(\"信箱 使用者名稱　密碼　不能為空白\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FirstTopBlock />\r\n            <WLoginSection>\r\n                <WLoginContainer>\r\n                    <WTagBlock>\r\n                        <WTag>\r\n                            <Link to=\"/LoginPage/login\">會員登入</Link>\r\n                        </WTag>\r\n                        <WTag>\r\n                            <Link to=\"/SignupPage/signup\">加入會員</Link>\r\n                        </WTag>\r\n                    </WTagBlock>\r\n                    <WInput placeholder=\"電子信箱\" type=\"email\" ref={emailRef} />\r\n                    <WInput placeholder=\"使用者名稱\" type=\"text\" ref={nameRef} />\r\n                    <WInput placeholder=\"密碼\" type=\"password\" ref={passwordRef} />\r\n                    <WSubmitButtom onClick={() => handleSubmit()}>\r\n                        {axiosStatus !== \"loading\" && \"加入\"}\r\n                        {axiosStatus === \"loading\" && <Spinner size=\"sm\" animation=\"border\" />}\r\n                    </WSubmitButtom>\r\n                </WLoginContainer>\r\n            </WLoginSection>\r\n        </>\r\n    );\r\n}\r\n// 　沒有選擇圖片　情況\r\n// 　加上必填提醒　\r\n//　沒有更新des　情況\r\n// 更新完回到　尚未編輯頁　","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\LoginIn.tsx",[],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\Header\\LoginOut.tsx",["67"],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserListPage.tsx",["68"],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\styles\\General.tsx",[],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\UserPage.tsx",["69","70","71"],"D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\pages\\UserPage\\EditorPage.tsx",["72","73"],"\r\nimport React, { useRef, useState, useEffect } from 'react'\r\nimport styled from \"styled-components\"\r\nimport { WUserImg, WSubmitButtom, outLineBlue } from \"../../styles/General\"\r\nimport { useUser } from \"../../hook\"\r\n\r\nconst WUserPageSection = styled.section`\r\n    padding-top:100px;\r\n    padding-bottom:100px;\r\n`\r\n\r\nconst WUserPageContainer = styled.div`\r\n    display:flex;\r\n    justify-content: center;\r\n    max-width:1000px;\r\n    margin:auto;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0 150px;\r\n`\r\n\r\nconst WUserImgList = styled(WUserImg)`\r\n    margin: 0 auto 20px auto;\r\n    \r\n`\r\n\r\nconst WUserBlock = styled.figure`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\n\r\n\r\nconst WButtonBlock = styled.div`\r\n\r\n`\r\n\r\nconst WEditButton = styled(WSubmitButtom)`\r\n    background-color:white;\r\n    color: ${outLineBlue};\r\n    border:solid 1px  ${outLineBlue};\r\n    &:hover{\r\n        background-color:${outLineBlue};\r\n        color:white;\r\n    }\r\n`\r\n\r\n\r\nconst WFileBlock = styled.div`\r\n    display:flex;\r\n    align-items: baseline;    \r\n`\r\n\r\nconst WWarningSpan = styled.span`\r\n    margin-left:10px;\r\n`\r\n\r\nconst WInputFile = styled.input`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    opacity: 0;\r\n`\r\n\r\nconst WLabelFile = styled.label`\r\n    border: solid #222 1px;\r\n    padding:5px 8px;\r\n    border-radius: 5px; \r\n    cursor:pointer;\r\n`\r\n\r\nconst WUserTextInput = styled.input`\r\n\r\n`\r\nconst WUserDescriptionTextArea = styled.textarea`\r\n\r\n`\r\n\r\ninterface TLocation {\r\n\r\n    jwtString?: string,\r\n    username: string,\r\n    memberId: string,\r\n    editMode?: boolean,\r\n\r\n}\r\ninterface EditorPageProps {\r\n    userData?: {\r\n        description: null | string,\r\n        id: string,\r\n        picture_url: string\r\n        username: string\r\n    }\r\n    EditPageCancel: () => void,\r\n    editDom: boolean | undefined,\r\n    setEditDom: React.Dispatch<React.SetStateAction<boolean | undefined>>,\r\n    userId: string,\r\n    editorLocation: TLocation\r\n}\r\n\r\nexport const EditorPage: React.FC<EditorPageProps> = ({\r\n    userData,\r\n    EditPageCancel,\r\n    setEditDom,\r\n    editDom,\r\n    userId,\r\n    editorLocation\r\n}) => {\r\n    const fileRef = useRef<HTMLInputElement>(null)\r\n    const usernameRef = useRef<HTMLInputElement>(null)\r\n    const textAreaRef = useRef<HTMLTextAreaElement>(null)\r\n    const [imgUrl, setImgUrl] = useState<string>(\"\")\r\n\r\n    const { axiosStatus, axiosUserData, errorCode, message, axiosUpdateAccount } = useUser()\r\n\r\n\r\n    useEffect(() => {\r\n        if (axiosStatus === \"success\") {\r\n            alert(\"更新成功\")\r\n            // if (axiosUserData) {\r\n            // axiosUserData.editMode = false\r\n            // const locationUseList = {\r\n            //     pathname: `/UserPage/users/${axiosUserData?.memberId}`,\r\n            //     state: axiosUserData,\r\n            // }\r\n            setEditDom(false)\r\n            // }\r\n        } else if (axiosStatus === \"error\") {\r\n            alert(\"errorCode: \" + errorCode + \"message: \" + message)\r\n        }\r\n\r\n    }, [errorCode])\r\n\r\n    const EditPageSave = () => {\r\n\r\n        let descripotion: string | null | undefined = !!textAreaRef?.current?.value ? textAreaRef?.current?.value : null\r\n        let username: string | undefined = !!usernameRef?.current?.value ? usernameRef?.current?.value : editorLocation.username\r\n        let fileData: File | undefined\r\n        if (fileRef.current?.files !== null) {\r\n            fileData = fileRef.current?.files[0]\r\n            axiosUpdateAccount({ fileData, username, descripotion, userId, location: editorLocation })\r\n        } else {\r\n            alert(\"使用者名稱 為必填\")\r\n        }\r\n\r\n    }\r\n\r\n    const handleImgChange = () => {\r\n        let fileData: File | undefined\r\n        if (fileRef.current?.files !== null) {\r\n            if (fileRef.current?.files[0]?.name !== \"\") {\r\n\r\n                fileData = fileRef.current?.files[0]\r\n                if (fileData?.size !== undefined && fileData?.size < 300000) {\r\n                    setImgUrl(URL.createObjectURL(fileData))\r\n                } else {\r\n                    alert(\"上傳失敗　圖片請勿超過３００ＫＢ\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let userImgUrl = imgUrl ? imgUrl : userData?.picture_url\r\n\r\n    return (\r\n        <WUserPageSection>\r\n            <WUserPageContainer>\r\n                <WUserBlock>\r\n                    <WUserImgList src={userImgUrl} alt=\"userImg\" />\r\n                    <WFileBlock>\r\n                        <WInputFile onChange={() => handleImgChange()} accept=\"image/*\" ref={fileRef} type=\"file\" id=\"file\" />\r\n                        <WLabelFile htmlFor=\"file\" >選擇檔案</WLabelFile>\r\n                        <WWarningSpan>上限300KB</WWarningSpan>\r\n                    </WFileBlock>\r\n                    <WUserTextInput required ref={usernameRef} placeholder={userData?.username} />\r\n                </WUserBlock>\r\n                <WUserDescriptionTextArea ref={textAreaRef} rows={4} cols={50} placeholder={!!userData?.description ? userData?.description : \"type something\"} />\r\n                <WButtonBlock>\r\n                    <WEditButton onClick={() => EditPageCancel()}>取消</WEditButton>\r\n                    <WEditButton onClick={() => EditPageSave()}>儲存</WEditButton>\r\n                </WButtonBlock>\r\n            </WUserPageContainer>\r\n        </WUserPageSection>\r\n    );\r\n}","D:\\work\\Font-end\\WebTeam\\BasicLogin_exam\\src\\hook.ts",["74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":54,"column":8,"nodeType":"85","endLine":54,"endColumn":19,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"84","line":52,"column":8,"nodeType":"85","endLine":52,"endColumn":19,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"88","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"83","severity":1,"message":"89","line":59,"column":8,"nodeType":"85","endLine":59,"endColumn":23,"suggestions":"90"},{"ruleId":"79","severity":1,"message":"91","line":76,"column":11,"nodeType":"81","messageId":"82","endLine":76,"endColumn":19},{"ruleId":"83","severity":1,"message":"92","line":99,"column":8,"nodeType":"85","endLine":99,"endColumn":25,"suggestions":"93"},{"ruleId":"83","severity":1,"message":"94","line":114,"column":8,"nodeType":"85","endLine":114,"endColumn":21,"suggestions":"95"},{"ruleId":"79","severity":1,"message":"96","line":114,"column":26,"nodeType":"81","messageId":"82","endLine":114,"endColumn":39},{"ruleId":"83","severity":1,"message":"97","line":132,"column":8,"nodeType":"85","endLine":132,"endColumn":19,"suggestions":"98"},{"ruleId":"79","severity":1,"message":"99","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosStatus', 'axiosUserData', 'history', and 'message'. Either include them or remove the dependency array.","ArrayExpression",["102"],["103"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'axiosGetAllUserData'. Either include it or remove the dependency array.",["104"],"'UserData' is defined but never used.","React Hook useEffect has a missing dependency: 'axiosGetSigleUserData'. Either include it or remove the dependency array.",["105"],"React Hook useEffect has missing dependencies: 'axiosUserData', 'errorCode', 'history', and 'message'. Either include them or remove the dependency array.",["106"],"'axiosUserData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axiosStatus', 'message', and 'setEditDom'. Either include them or remove the dependency array. If 'setEditDom' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["107"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"108","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [axiosStatus, axiosUserData, errorCode, history, message]",{"range":"118","text":"119"},{"range":"120","text":"119"},"Update the dependencies array to be: [axiosGetAllUserData, axiosUserData]",{"range":"121","text":"122"},"Update the dependencies array to be: [userId, editDom, axiosGetSigleUserData]",{"range":"123","text":"124"},{"range":"125","text":"119"},"Update the dependencies array to be: [axiosStatus, errorCode, message, setEditDom]",{"range":"126","text":"127"},[1582,1593],"[axiosStatus, axiosUserData, errorCode, history, message]",[1687,1698],[1567,1582],"[axiosGetAllUserData, axiosUserData]",[2468,2485],"[userId, editDom, axiosGetSigleUserData]",[3002,3015],[2996,3007],"[axiosStatus, errorCode, message, setEditDom]"]